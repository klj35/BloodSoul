<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>如何内嵌bilibili网站链接</title>
      <link href="/BloodSoul.github.io/2021/09/12/block/ru-he-nei-qian-bilibili-wang-zhan-lian-jie/"/>
      <url>/BloodSoul.github.io/2021/09/12/block/ru-he-nei-qian-bilibili-wang-zhan-lian-jie/</url>
      
        <content type="html"><![CDATA[<p>直接打开我们需要嵌入的视频网页，点击视频下方的分享按钮，把嵌入代码复制，如下图：</p><p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210912224707012.png" alt="image-20210912224707012"> </p><p>先说一下外链引用的一些 缺点 ：最重要的一点是清晰度默认只能显示最低的，这个是万万不能接受的，如何调清晰度后面会讲到，先学会引用先，一步一步来</p><p>先看看一个我视频的嵌入代码</p><iframe src="//player.bilibili.com/player.html?aid=76053337&amp;;bvid=BV11J41127DF&amp;cid=130096191&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><p>那么如何改变样式大小呢？</p><p>只需要加入代码</p><p> width=”100%” height=”600”</p><p>这里的宽度和高度可以根据自己的需求自行修改定制</p><p>最终代码是这样的（已经加粗显示了，方便查看）：</p><iframe src="//player.bilibili.com/player.html?aid=76053337&amp;;bvid=BV11J41127DF&amp;cid=130096191&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" width="100%" height="600"> </iframe><p>视频清晰度的调节<br>先来看看我们的视频地址</p><p>//player.bilibili.com/player.html?aid=76053337&amp;;bvid=BV11J41127DF&amp;cid=130096191&amp;page=1</p><p>修改一下我们的地址</p><p>在 // 前面加上 https:</p><p>在视频地址最后面加上  &amp;high_quality=1</p><p>最终的成品是这样的，新增加的部分我已经加粗显示了</p><p><a href="https://player.bilibili.com/player.html?aid=76053337&amp;;bvid=BV11J41127DF&amp;cid=130096191&amp;page=1&amp;high_quality=1">https://player.bilibili.com/player.html?aid=76053337&amp;;bvid=BV11J41127DF&amp;cid=130096191&amp;page=1&amp;high_quality=1</a></p><p>移动端如何自适应<br>经过谷歌一下，找到了一些解决方法，这里直接给大家分享解密一下下</p><p>先直接看一下成品</p><div style="position: relative; padding: 30% 45%;"><iframe style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;" src="https://player.bilibili.com/player.html?aid=76053337&amp;;bvid=BV11J41127DF&amp;cid=130096191&amp;page=1&amp;as_wide=1&amp;high_quality=1&amp;danmaku=0" frameborder="no" scrolling="no"></iframe></div><p>稍微解释一下上面代码的含义：</p><p>page -&gt; 起始下标为 1 (默认值也是为1)</p><p>as_wide -&gt; 是否宽屏 【1: 宽屏, 0: 小屏】</p><p>high_quality -&gt; 是否高清 【1: 高清(最高1080p) / 0: 最低视频质量(默认)】</p><p>danmaku -&gt; 是否开启弹幕 【1: 开启(默认), 0: 关闭】</p><p>allowfullscreen -&gt; allowfullscreen= “ture” 允许全屏，使用该参数可以在浏览器中全屏播放</p><table><thead><tr><th align="left">属性</th><th align="left">值</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><a href="http://www.w3school.com.cn/tags/att_iframe_align.asp">align</a></td><td align="left">leftrighttopmiddlebottom</td><td align="left">不赞成使用。请使用样式代替。规定如何根据周围的元素来对齐此框架。</td></tr><tr><td align="left"><a href="http://www.w3school.com.cn/tags/att_iframe_frameborder.asp">frameborder</a></td><td align="left">10</td><td align="left">规定是否显示框架周围的边框。</td></tr><tr><td align="left"><a href="http://www.w3school.com.cn/tags/att_iframe_height.asp">height</a></td><td align="left"><em>pixels</em> <em>%</em></td><td align="left">规定 iframe 的高度。</td></tr><tr><td align="left"><a href="http://www.w3school.com.cn/tags/att_iframe_longdesc.asp">longdesc</a></td><td align="left"><em>URL</em></td><td align="left">规定一个页面，该页面包含了有关 iframe 的较长描述。</td></tr><tr><td align="left"><a href="http://www.w3school.com.cn/tags/att_iframe_marginheight.asp">marginheight</a></td><td align="left"><em>pixels</em></td><td align="left">定义 iframe 的顶部和底部的边距。</td></tr><tr><td align="left"><a href="http://www.w3school.com.cn/tags/att_iframe_marginwidth.asp">marginwidth</a></td><td align="left"><em>pixels</em></td><td align="left">定义 iframe 的左侧和右侧的边距。</td></tr><tr><td align="left"><a href="http://www.w3school.com.cn/tags/att_iframe_name.asp">name</a></td><td align="left"><em>frame_name</em></td><td align="left">规定 iframe 的名称。</td></tr><tr><td align="left"><a href="http://www.w3school.com.cn/tags/att_iframe_sandbox.asp">sandbox</a></td><td align="left">“”allow-formsallow-same-originallow-scriptsallow-top-navigation</td><td align="left">启用一系列对 <iframe> 中内容的额外限制。</td></tr><tr><td align="left"><a href="http://www.w3school.com.cn/tags/att_iframe_scrolling.asp">scrolling</a></td><td align="left">yesnoauto</td><td align="left">规定是否在 iframe 中显示滚动条。</td></tr><tr><td align="left"><a href="http://www.w3school.com.cn/tags/att_iframe_seamless.asp">seamless</a></td><td align="left">seamless</td><td align="left">规定 <iframe> 看上去像是包含文档的一部分。</td></tr><tr><td align="left"><a href="http://www.w3school.com.cn/tags/att_iframe_src.asp">src</a></td><td align="left"><em>URL</em></td><td align="left">规定在 iframe 中显示的文档的 URL。</td></tr><tr><td align="left"><a href="http://www.w3school.com.cn/tags/att_iframe_srcdoc.asp">srcdoc</a></td><td align="left"><em>HTML_code</em></td><td align="left">规定在 <iframe> 中显示的页面的 HTML 内容。</td></tr><tr><td align="left"><a href="http://www.w3school.com.cn/tags/att_iframe_width.asp">width</a></td><td align="left"><em>pixels</em> <em>%</em></td><td align="left">定义 iframe 的宽度。</td></tr></tbody></table><p>文档转载改编自馨客栈研究院：<a href="https://www.bilibili.com/read/cv6775208">https://www.bilibili.com/read/cv6775208</a></p></iframe></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Zero2One </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>matery添加live2d看板娘</title>
      <link href="/BloodSoul.github.io/2021/09/12/block/matery-tian-jia-live2d-kan-ban-niang/"/>
      <url>/BloodSoul.github.io/2021/09/12/block/matery-tian-jia-live2d-kan-ban-niang/</url>
      
        <content type="html"><![CDATA[<h1 id="一、克隆资源"><a href="#一、克隆资源" class="headerlink" title="一、克隆资源"></a>一、克隆资源</h1><p>找到 live2d-widget fork 一份到自己的仓库。地址：  <a href="https://github.com/stevenjoezhang/live2d-widget">https://github.com/stevenjoezhang/live2d-widget</a></p><p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210912215146016.png" alt="image-20210912215146016"> </p><p>找到 live2d_api fork 一份到自己的仓库。地址： <a href="https://github.com/fghrsh/live2d_api">https://github.com/fghrsh/live2d_api</a></p><p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210912215321806.png" alt="image-20210912215321806"> </p><p>live2d-widget ：前端显示代码逻辑</p><p>live2d_api：live2d 动画核心 api，以及存放 live2d 模型资源</p><p>纸飞机彩蛋：<a href="http://www.websiteasteroids.com/%EF%BC%8C%E4%BB%93%E5%BA%93%E5%9C%B0%E5%9D%80%EF%BC%9Ahttps://github.com/stevenjoezhang/asteroids">http://www.websiteasteroids.com/，仓库地址：https://github.com/stevenjoezhang/asteroids</a></p><h1 id="二、配置CDN"><a href="#二、配置CDN" class="headerlink" title="二、配置CDN"></a>二、配置CDN</h1><p><strong>JSDELIVR</strong> 一个免费快速的 CDN，官方地址：<a href="https://www.jsdelivr.com/">https://www.jsdelivr.com/</a></p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210912220514129.png" alt="image-20210912220514129" style="zoom:67%;"> <img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210912220608842.png" alt="image-20210912220608842" style="zoom: 67%;"> <p>下载 live2d-widget，在 autoload.js 脚本，修改 CDN 加载路径： live2d_path、cdnPath @后面为仓库的 Tag</p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210912220241022.png" alt="image-20210912220241022" style="zoom:80%;"> <img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210912221000269.png" alt="image-20210912221000269" style="zoom: 80%;"> <p>在 waifu-tips.js 脚本修改 个人信息链接地址和纸飞机代码地址：</p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210912221234706.png" alt="image-20210912221234706" style="zoom: 50%;">  <p>目录结构：</p><ul><li><code>waifu-tips.js</code> 包含了按钮和对话框的逻辑</li><li><code>waifu-tips.json</code> 中定义了触发条件（<code>selector</code>，CSS 选择器）和触发时显示的文字（<code>text</code>）</li><li><code>waifu.css</code> 是看板娘的样式表</li></ul><p>修改完后，需要新建对应的 Tag</p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210912221622555.png" alt="image-20210912221622555" style="zoom: 80%;">  <p>在对应的 GitHub 仓库 新建 Release 版本</p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210912221747249.png" alt="image-20210912221747249" style="zoom: 67%;"> <img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210912221853137.png" alt="image-20210912221853137" style="zoom:67%;"> <img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210912221919590.png" alt="image-20210912221919590" style="zoom:67%;"> <img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210912222117313.png" alt="image-20210912222117313" style="zoom:67%;"> <p>CDN 生效是需要一段时间的，根据测试大概需要 1分钟左右</p><p>可以通过直接在浏览器中访问对应地址，查看是否生效完成</p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210912222331252.png" alt="image-20210912222331252" style="zoom:67%;"> <h1 id="三、植入-Matery-主题"><a href="#三、植入-Matery-主题" class="headerlink" title="三、植入 Matery 主题"></a>三、植入 Matery 主题</h1><p>在 head.ejs 中，添加对应脚本引用</p><p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210912222534030.png" alt="image-20210912222534030"> </p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"https://cdn.jsdelivr.net/gh/klj35/live2d-widget@v0.9.1/autoload.js"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>live2d 需要 font-awesome 库，默认 matery 已经添加了，如过因为一些原因没有添加需要手动添加如下代码：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>link rel<span class="token operator">=</span><span class="token string">"stylesheet"</span> href<span class="token operator">=</span><span class="token string">"https://cdn.jsdelivr.net/npm/font-awesome/css/font-awesome.min.css"</span><span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210912223112918.png" alt="image-20210912223112918" style="zoom:80%;"> ]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Zero2One </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>快速熟悉 Matery 代码</title>
      <link href="/BloodSoul.github.io/2021/09/12/code/kuai-su-shou-xi-matery-dai-ma/"/>
      <url>/BloodSoul.github.io/2021/09/12/code/kuai-su-shou-xi-matery-dai-ma/</url>
      
        <content type="html"><![CDATA[<h1 id="一、语言"><a href="#一、语言" class="headerlink" title="一、语言"></a>一、语言</h1><h2 id="1-1-HTML"><a href="#1-1-HTML" class="headerlink" title="1.1 HTML"></a>1.1 HTML</h2><h3 id="1-1-1-简介"><a href="#1-1-1-简介" class="headerlink" title="1.1.1 简介"></a>1.1.1 简介</h3><p>超文本标记语言（英语：HyperText Markup Language，简称：HTML）是一种用于创建网页的标准标记语言。</p><p>您可以使用 HTML 来建立自己的 WEB 站点，HTML 运行在浏览器上，由浏览器来解析。</p><h3 id="1-1-2-总览"><a href="#1-1-2-总览" class="headerlink" title="1.1.2 总览"></a>1.1.2 总览</h3><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210912125724400.png" alt="image-20210912125724400" style="zoom: 67%;"> <h3 id="1-1-3-教程网站"><a href="#1-1-3-教程网站" class="headerlink" title="1.1.3 教程网站"></a>1.1.3 教程网站</h3><p>菜鸟教程 ：<a href="https://www.runoob.com/html/html-intro.html">https://www.runoob.com/html/html-intro.html</a></p><p>W3School： <a href="https://www.w3school.com.cn/tags/index.asp">https://www.w3school.com.cn/tags/index.asp</a></p><h2 id="1-2-JavaScript"><a href="#1-2-JavaScript" class="headerlink" title="1.2 JavaScript"></a>1.2 JavaScript</h2><h3 id="1-2-1-简介"><a href="#1-2-1-简介" class="headerlink" title="1.2.1 简介"></a>1.2.1 简介</h3><p>JavaScript 是互联网上最流行的脚本语言，这门语言可用于 HTML 和 web，更可广泛用于服务器、PC、笔记本电脑、平板电脑和智能手机等设备。</p><p>JavaScript 是一种轻量级的编程语言。</p><p>JavaScript 是可插入 HTML 页面的编程代码。</p><p>JavaScript 插入 HTML 页面后，可由所有的现代浏览器执行。</p><h3 id="1-2-2-本博客常用内容"><a href="#1-2-2-本博客常用内容" class="headerlink" title="1.2.2 本博客常用内容"></a>1.2.2 本博客常用内容</h3><p>ES2015(ES6) 新增加了两个重要的 JavaScript 关键字: <strong>let</strong> 和 <strong>const</strong>。</p><p><strong>let</strong> 声明的变量只在 <strong>let</strong> 命令所在的代码块内有效。</p><p><strong>const</strong> 声明一个只读的常量，一旦声明，常量的值就不能改变。</p><p>在 ES6 之前，JavaScript 只有两种作用域： <strong>全局变量</strong> 与 <strong>函数内的局部变量</strong>。</p><h3 id="1-2-3-教程网站"><a href="#1-2-3-教程网站" class="headerlink" title="1.2.3 教程网站"></a>1.2.3 教程网站</h3><p>菜鸟教程 ：<a href="https://www.runoob.com/js/js-tutorial.html">https://www.runoob.com/js/js-tutorial.html</a></p><h2 id="1-3-CSS"><a href="#1-3-CSS" class="headerlink" title="1.3 CSS"></a>1.3 CSS</h2><h3 id="1-3-1-简介"><a href="#1-3-1-简介" class="headerlink" title="1.3.1 简介"></a>1.3.1 简介</h3><ul><li>CSS 指层叠样式表 (<strong>C</strong>ascading <strong>S</strong>tyle <strong>S</strong>heets)</li><li>样式定义<strong>如何显示</strong> HTML 元素</li><li>样式通常存储在<strong>样式表</strong>中</li><li>把样式添加到 HTML 4.0 中，是为了<strong>解决内容与表现分离的问题</strong></li><li><strong>外部样式表</strong>可以极大提高工作效率</li><li>外部样式表通常存储在 <strong>CSS 文件</strong>中</li><li>多个样式定义可<strong>层叠</strong>为一个</li></ul><h3 id="1-3-2-本博客常用"><a href="#1-3-2-本博客常用" class="headerlink" title="1.3.2 本博客常用"></a>1.3.2 本博客常用</h3><h5 id="1-3-2-1-声明-id"><a href="#1-3-2-1-声明-id" class="headerlink" title="1.3.2.1 声明 id"></a>1.3.2.1 声明 id</h5><p>CSS 中使用 # + idName 来声明 id，例如：#cardId、#fogImage</p><p>1.3.2.2 声明类</p><p>CSS 中使用 “.” 来声明类，例如：.bookClass、.img-item</p><p>CSS 中使用 @ 来声明媒体</p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210912131156275.png" alt="image-20210912131156275" style="zoom:67%;"> <img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210912131234082.png" alt="image-20210912131234082" style="zoom:50%;"> <h3 id="1-3-3-教程网站"><a href="#1-3-3-教程网站" class="headerlink" title="1.3.3 教程网站"></a>1.3.3 教程网站</h3><p>菜鸟教程： <a href="https://www.runoob.com/css/css-intro.html">https://www.runoob.com/css/css-intro.html</a></p><h2 id="1-4-EJS"><a href="#1-4-EJS" class="headerlink" title="1.4 EJS"></a>1.4 EJS</h2><h3 id="1-4-1-简介"><a href="#1-4-1-简介" class="headerlink" title="1.4.1 简介"></a>1.4.1 简介</h3><p>“E” 代表什么？可以表示 “可嵌入（Embedded）”，也可以是“高效（Effective）”、“优雅（Elegant）”或者是“简单（Easy）”。EJS 是一套简单的模板语言，<strong>帮你利用普通的 JavaScript 代码生成 HTML 页面</strong>。EJS 没有如何组织内容的教条；也没有再造一套迭代和控制流语法；有的只是普通的 JavaScript 代码而已。</p><h3 id="1-4-2-教程网站"><a href="#1-4-2-教程网站" class="headerlink" title="1.4.2 教程网站"></a>1.4.2 教程网站</h3><p>EJS 官网： <a href="https://ejs.bootcss.com/#docs">https://ejs.bootcss.com/#docs</a></p><h2 id="1-5-HTML-DOM"><a href="#1-5-HTML-DOM" class="headerlink" title="1.5 HTML DOM"></a>1.5 HTML DOM</h2><h3 id="1-5-1-简介"><a href="#1-5-1-简介" class="headerlink" title="1.5.1 简介"></a>1.5.1 简介</h3><p>HTML DOM 定义了访问和操作 HTML 文档的标准。</p><h5 id="1-5-1-1-什么是-DOM？"><a href="#1-5-1-1-什么是-DOM？" class="headerlink" title="1.5.1.1 什么是 DOM？"></a>1.5.1.1 什么是 DOM？</h5><p>DOM 是 W3C（万维网联盟）的标准。</p><p>DOM 定义了访问 HTML 和 XML 文档的标准：</p><blockquote><p>“W3C 文档对象模型 （DOM） 是中立于平台和语言的接口，它允许程序和脚本动态地访问和更新文档的内容、结构和样式。”</p></blockquote><p>W3C DOM 标准被分为 3 个不同的部分：</p><ul><li>核心 DOM - 针对任何结构化文档的标准模型</li><li>XML DOM - 针对 XML 文档的标准模型</li><li>HTML DOM - 针对 HTML 文档的标准模型</li></ul><p><strong>编者注：</strong>DOM 是 Document Object Model（文档对象模型）的缩写。</p><h5 id="1-5-1-2-什么是-HTML-DOM？"><a href="#1-5-1-2-什么是-HTML-DOM？" class="headerlink" title="1.5.1.2 什么是 HTML DOM？"></a>1.5.1.2 什么是 HTML DOM？</h5><p>HTML DOM 是：</p><ul><li>HTML 的标准对象模型</li><li>HTML 的标准编程接口</li><li>W3C 标准</li></ul><p>HTML DOM 定义了所有 HTML 元素的<em>对象</em>和<em>属性</em>，以及访问它们的<em>方法</em>。</p><p><em>换言之，HTML DOM 是关于如何获取、修改、添加或删除 HTML 元素的标准。</em></p><h3 id="1-5-2-教程"><a href="#1-5-2-教程" class="headerlink" title="1.5.2 教程"></a>1.5.2 教程</h3><p>菜鸟教程：<a href="https://www.runoob.com/htmldom/htmldom-intro.html">https://www.runoob.com/htmldom/htmldom-intro.html</a></p><h1 id="二、类库"><a href="#二、类库" class="headerlink" title="二、类库"></a>二、类库</h1><h2 id="2-1-JQuery"><a href="#2-1-JQuery" class="headerlink" title="2.1 JQuery"></a>2.1 JQuery</h2><h3 id="2-1-1-简介"><a href="#2-1-1-简介" class="headerlink" title="2.1.1 简介"></a>2.1.1 简介</h3><p>jQuery 是一个 JavaScript 库。</p><p>jQuery 极大地简化了 JavaScript 编程。</p><p>jQuery 库可以通过一行简单的标记被添加到网页中。</p><p>jQuery 是一个 JavaScript 函数库。</p><p>jQuery 是一个轻量级的”写的少，做的多”的 JavaScript 库。</p><p>jQuery 库包含以下功能：</p><ul><li>HTML 元素选取</li><li>HTML 元素操作</li><li>CSS 操作</li><li>HTML 事件函数</li><li>JavaScript 特效和动画</li><li>HTML DOM 遍历和修改</li><li>AJAX</li><li>Utilities</li></ul><p><strong>提示：</strong> 除此之外，jQuery 还提供了大量的插件。</p><h3 id="2-1-2-教程网站"><a href="#2-1-2-教程网站" class="headerlink" title="2.1.2 教程网站"></a>2.1.2 教程网站</h3><p>菜鸟教程：<a href="https://www.runoob.com/jquery/jquery-tutorial.html">https://www.runoob.com/jquery/jquery-tutorial.html</a></p><h2 id="2-2-lightGallery"><a href="#2-2-lightGallery" class="headerlink" title="2.2 lightGallery"></a>2.2 lightGallery</h2><h3 id="2-2-1-简介"><a href="#2-2-1-简介" class="headerlink" title="2.2.1 简介"></a>2.2.1 简介</h3><p>A lightweight, modular, JavaScript image and video lightbox gallery plugin. Available for React.js, Vue.js, Angular, and TypeScript.</p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210912132143259.png" alt="image-20210912132143259" style="zoom:67%;"> <h3 id="2-2-1-教程网站"><a href="#2-2-1-教程网站" class="headerlink" title="2.2.1 教程网站"></a>2.2.1 教程网站</h3><p>lightGallery官网 <a href="https://www.lightgalleryjs.com/docs/getting-started/">https://www.lightgalleryjs.com/docs/getting-started/</a></p><h1 id="三、Matery-流程图"><a href="#三、Matery-流程图" class="headerlink" title="三、Matery 流程图"></a>三、Matery 流程图</h1><p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/block%E6%B5%81%E7%A8%8B%E5%9B%BE.drawio.png" alt="block流程图.drawio"> </p>]]></content>
      
      
      <categories>
          
          <category> Code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>B站视频下载</title>
      <link href="/BloodSoul.github.io/2021/09/11/movieclip/b-zhan-shi-pin-xia-zai/"/>
      <url>/BloodSoul.github.io/2021/09/11/movieclip/b-zhan-shi-pin-xia-zai/</url>
      
        <content type="html"><![CDATA[<h1 id="一、准备环境"><a href="#一、准备环境" class="headerlink" title="一、准备环境"></a>一、准备环境</h1><p>Step1：下载贝贝本地解析工具并安装</p><p>地址 <a href="https://xbeibeix.com/file/?get=610e8b4af1a6e">https://xbeibeix.com/file/?get=610e8b4af1a6e</a></p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210911003752673.png" alt="image-20210911003752673" style="zoom:50%;"> <p>Step2：下载 ffmpeg 视频解析工具</p><p>官网地址： <a href="https://www.ffmpeg.org/">https://www.ffmpeg.org/</a></p><p>下载地址：<a href="https://www.ffmpeg.org/download.html#build-windows">https://www.ffmpeg.org/download.html#build-windows</a></p><p> 选择对应平台，然后点击下面的链接</p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210911011221456.png" alt="image-20210911011221456" style="zoom:50%;"> <p>向下滚动到 release，建议下载 full 版本</p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210911011350452.png" alt="image-20210911011350452" style="zoom:50%;"> <h1 id="二、准备视频"><a href="#二、准备视频" class="headerlink" title="二、准备视频"></a>二、准备视频</h1><p>step1: 启动下载的贝贝本地解析软件，点击主程序</p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210911004806307.png" alt="image-20210911004806307" style="zoom:50%;"> <p>step2：去贝贝本地解析视频网站，输入视频地址，并点击解析。网站地址： <a href="https://xbeibeix.com/api/bilibili/service">https://xbeibeix.com/api/bilibili/service</a></p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210911004920949.png" alt="image-20210911004920949" style="zoom:50%;"> <p>step3：滚动到网页最下端，选择视频尺寸点击下载，选择音频尺寸点击下载</p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210911005515190.png" alt="image-20210911005515190" style="zoom:50%;"> <p>step4：回到贝贝本地工具，点击下载器，在打开的网页中可以查看下载进度</p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210911005431379.png" alt="image-20210911005431379" style="zoom:50%;"> <p>step5: 点击蓝色文字，可以查看文件下载到的具体位置</p><p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210911010504524.png" alt="image-20210911010504524"></p><p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210911010532233.png" alt="image-20210911010532233"></p><p>step6：去到对应路径，早到两个 .m4s 文件代表视频准备完成</p><p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210911010638181.png" alt="image-20210911010638181"> </p><h1 id="三、视频合并"><a href="#三、视频合并" class="headerlink" title="三、视频合并"></a>三、视频合并</h1><p>Step1：解压下载好的 ffmpeg</p><p>Step2：将准备好的两个视频从新命名为 video 和 audio，并复制到 ffmpeg 的 bin 目录下</p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210911011929545.png" alt="image-20210911011929545" style="zoom:80%;"> <p>Step3：通过 shift + 鼠标右键，点击在此处打开 PowerShell 窗口，输入如下指令</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">.<span class="token punctuation">\</span>ffmpeg.exe -i video.m4s -i audio.m4s -codec copy Output.mp4<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>显示如下则表示成功，会有一个 Output.mp4 文件，这个就是我们最终的结果</p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210911012307117.png" alt="image-20210911012307117" style="zoom:50%;"> <img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210911012707247.png" alt="image-20210911012707247" style="zoom:80%;"> <h1 id="四、视频合并的其他方式"><a href="#四、视频合并的其他方式" class="headerlink" title="四、视频合并的其他方式"></a>四、视频合并的其他方式</h1><h2 id="4-1-基于-ffmpeg-开发的一些可视化工具"><a href="#4-1-基于-ffmpeg-开发的一些可视化工具" class="headerlink" title="4.1 基于 ffmpeg 开发的一些可视化工具"></a>4.1 基于 ffmpeg 开发的一些可视化工具</h2><h3 id="4-1-1-贝贝工具箱"><a href="#4-1-1-贝贝工具箱" class="headerlink" title="4.1.1 贝贝工具箱"></a>4.1.1 贝贝工具箱</h3><h4 id="4-1-1-1-下载工具"><a href="#4-1-1-1-下载工具" class="headerlink" title="4.1.1.1 下载工具"></a>4.1.1.1 下载工具</h4><p>在贝贝网站上点击下载贝贝工具箱，解压密码 123</p><p>网站地址 <a href="https://xbeibeix.com/api/bilibili/">https://xbeibeix.com/api/bilibili/</a></p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210911093916564.png" alt="image-20210911093916564" style="zoom: 67%;"> <h4 id="4-1-1-2-工具使用方式"><a href="#4-1-1-2-工具使用方式" class="headerlink" title="4.1.1.2 工具使用方式"></a>4.1.1.2 工具使用方式</h4><p>打开工具一次点击 视频功能-&gt;视频音频合并-&gt;选择视频，选择音频-&gt;运行</p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210911094402614.png" alt="image-20210911094402614" style="zoom:67%;"> <h3 id="4-1-2-贝贝在线音频视频合并"><a href="#4-1-2-贝贝在线音频视频合并" class="headerlink" title="4.1.2 贝贝在线音频视频合并"></a>4.1.2 贝贝在线音频视频合并</h3><p>网站地址：<a href="https://xbeibeix.com/videotool/">https://xbeibeix.com/videotool/</a></p><p>依次点击合并-&gt;选择视频、音频-&gt;合并视频与音频-&gt;下载</p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210911094836049.png" alt="image-20210911094836049" style="zoom: 67%;"> <h3 id="4-1-3-有损去水印"><a href="#4-1-3-有损去水印" class="headerlink" title="4.1.3 有损去水印"></a>4.1.3 有损去水印</h3><p>利用格式工程进行去水印地址 <a href="http://www.pcgeshi.com/">http://www.pcgeshi.com/</a></p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210911131437452.png" alt="image-20210911131437452" style="zoom:50%;"> <img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210911131538354.png" alt="image-20210911131538354" style="zoom:50%;"> <img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210911131607496.png" alt="image-20210911131607496" style="zoom:50%;"> <img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210911131645810.png" alt="image-20210911131645810" style="zoom:50%;"> <img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210911131717300.png" alt="image-20210911131717300" style="zoom:50%;"> ]]></content>
      
      
      <categories>
          
          <category> 视频编辑 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> B站 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>正则表达式学习</title>
      <link href="/BloodSoul.github.io/2021/09/10/code/zheng-ze-biao-da-shi-xue-xi/"/>
      <url>/BloodSoul.github.io/2021/09/10/code/zheng-ze-biao-da-shi-xue-xi/</url>
      
        <content type="html"><![CDATA[<h1 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h1><p>在使用 Picgo 上传图片的时，会默认添加一个 ![] 图片名称标记，导致最终的文档会附带一些无意义的图片名称（主要是我懒，没给图片起名，大部分都是截图或者复制的图片），想动态筛选替换，抹去无意义的干扰，废话不多说，直接开始。</p><p>以下内容从菜鸟教程正则表达式复制，原文链接 <a href="https://www.runoob.com/regexp/regexp-syntax.html">https://www.runoob.com/regexp/regexp-syntax.html</a></p><p>常用公式写到最前面：</p><ul><li><p>用于匹配 alt=”xxx”： <strong>alt=”.+?\b”</strong></p></li><li><p>用于匹配 ![xxx]： <strong>![.+]</strong></p></li></ul><h1 id="二、语法"><a href="#二、语法" class="headerlink" title="二、语法"></a>二、语法</h1><h2 id="普通字符"><a href="#普通字符" class="headerlink" title="普通字符"></a>普通字符</h2><p>普通字符包括没有显式指定为元字符的所有可打印和不可打印字符。这包括所有大写和小写字母、所有数字、所有标点符号和一些其他符号。</p><table><thead><tr><th align="left">字符</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">[ABC]</td><td align="left">匹配 <strong>[…]</strong> 中的所有字符，例如 <strong>[aeiou]</strong> 匹配字符串 “google runoob taobao” 中所有的 e o u a 字母。<img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210910160148979.png"></td></tr><tr><td align="left">[^ABC]</td><td align="left">匹配除了 <strong>[…]</strong> 中字符的所有字符，例如 <strong>[^aeiou]</strong> 匹配字符串 “google runoob taobao” 中除了 e o u a 字母的所有字母。<img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210910160226835.png"></td></tr><tr><td align="left">[A-Z]</td><td align="left">[A-Z] 表示一个区间，匹配所有大写字母，[a-z] 表示所有小写字母。<img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/C5E357BD-65E3-4EB3-9D80-10D096F19287.jpg"></td></tr><tr><td align="left">.</td><td align="left">匹配除换行符（\n、\r）之外的任何单个字符，相等于 [^\n\r]。<img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/0FD7E77D-38A7-43BC-B51A-7DBA23A77756.jpg"></td></tr><tr><td align="left">[\s\S]</td><td align="left">匹配所有。\s 是匹配所有空白符，包括换行，\S 非空白符，不包括换行。<img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/47CA6C59-64CF-433A-909E-1E342349A4E0.jpg"></td></tr><tr><td align="left">\w</td><td align="left">匹配字母、数字、下划线。等价于 [A-Za-z0-9_]<img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/F35A5971-3519-4CAE-8BEC-9DE8F4A55257.jpg"></td></tr></tbody></table><hr><h2 id="非打印字符"><a href="#非打印字符" class="headerlink" title="非打印字符"></a>非打印字符</h2><p>非打印字符也可以是正则表达式的组成部分。下表列出了表示非打印字符的转义序列：</p><table><thead><tr><th align="left">字符</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">\cx</td><td align="left">匹配由x指明的控制字符。例如， \cM 匹配一个 Control-M 或回车符。x 的值必须为 A-Z 或 a-z 之一。否则，将 c 视为一个原义的 ‘c’ 字符。</td></tr><tr><td align="left">\f</td><td align="left">匹配一个换页符。等价于 \x0c 和 \cL。</td></tr><tr><td align="left">\n</td><td align="left">匹配一个换行符。等价于 \x0a 和 \cJ。</td></tr><tr><td align="left">\r</td><td align="left">匹配一个回车符。等价于 \x0d 和 \cM。</td></tr><tr><td align="left">\s</td><td align="left">匹配任何空白字符，包括空格、制表符、换页符等等。等价于 [ \f\n\r\t\v]。注意 Unicode 正则表达式会匹配全角空格符。</td></tr><tr><td align="left">\S</td><td align="left">匹配任何非空白字符。等价于 [^ \f\n\r\t\v]。</td></tr><tr><td align="left">\t</td><td align="left">匹配一个制表符。等价于 \x09 和 \cI。</td></tr><tr><td align="left">\v</td><td align="left">匹配一个垂直制表符。等价于 \x0b 和 \cK。</td></tr></tbody></table><hr><h2 id="特殊字符"><a href="#特殊字符" class="headerlink" title="特殊字符"></a>特殊字符</h2><p>所谓特殊字符，就是一些有特殊含义的字符，如上面说的 <strong>runoo*b</strong> 中的 *****，简单的说就是表示任何字符串的意思。如果要查找字符串中的 ***** 符号，则需要对 ***** 进行转义，即在其前加一个 <em>***，**runo*ob</em>* 匹配字符串 <strong>runo*ob</strong>。</p><p>许多元字符要求在试图匹配它们时特别对待。若要匹配这些特殊字符，必须首先使字符”转义”，即，将反斜杠字符*<em>*</em> 放在它们前面。下表列出了正则表达式中的特殊字符：</p><table><thead><tr><th align="left">特别字符</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">$</td><td align="left">匹配输入字符串的结尾位置。如果设置了 RegExp 对象的 Multiline 属性，则 $ 也匹配 ‘\n’ 或 ‘\r’。要匹配 $ 字符本身，请使用 $。</td></tr><tr><td align="left">( )</td><td align="left">标记一个子表达式的开始和结束位置。子表达式可以获取供以后使用。要匹配这些字符，请使用 ( 和 )。</td></tr><tr><td align="left">*</td><td align="left">匹配前面的子表达式零次或多次。要匹配 * 字符，请使用 *。</td></tr><tr><td align="left">+</td><td align="left">匹配前面的子表达式一次或多次。要匹配 + 字符，请使用 +。</td></tr><tr><td align="left">.</td><td align="left">匹配除换行符 \n 之外的任何单字符。要匹配 . ，请使用 . 。</td></tr><tr><td align="left">[</td><td align="left">标记一个中括号表达式的开始。要匹配 [，请使用 [。</td></tr><tr><td align="left">?</td><td align="left">匹配前面的子表达式零次或一次，或指明一个非贪婪限定符。要匹配 ? 字符，请使用 ?。</td></tr><tr><td align="left">\</td><td align="left">将下一个字符标记为或特殊字符、或原义字符、或向后引用、或八进制转义符。例如， ‘n’ 匹配字符 ‘n’。’\n’ 匹配换行符。序列 ‘\‘ 匹配 “"，而 ‘(‘ 则匹配 “(“。</td></tr><tr><td align="left">^</td><td align="left">匹配输入字符串的开始位置，除非在方括号表达式中使用，当该符号在方括号表达式中使用时，表示不接受该方括号表达式中的字符集合。要匹配 ^ 字符本身，请使用 ^。</td></tr><tr><td align="left">{</td><td align="left">标记限定符表达式的开始。要匹配 {，请使用 {。</td></tr><tr><td align="left">|</td><td align="left">指明两项之间的一个选择。要匹配 |，请使用 |。</td></tr></tbody></table><hr><h2 id="限定符"><a href="#限定符" class="headerlink" title="限定符"></a>限定符</h2><p>限定符用来指定正则表达式的一个给定组件必须要出现多少次才能满足匹配。有 ***** 或 <strong>+</strong> 或 <strong>?</strong> 或 <strong>{n}</strong> 或 <strong>{n,}</strong> 或 <strong>{n,m}</strong> 共6种。</p><p>正则表达式的限定符有：</p><table><thead><tr><th align="left">字符</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">*</td><td align="left">匹配前面的子表达式零次或多次。例如，zo* 能匹配 “z” 以及 “zoo”。* 等价于{0,}。</td></tr><tr><td align="left">+</td><td align="left">匹配前面的子表达式一次或多次。例如，’zo+’ 能匹配 “zo” 以及 “zoo”，但不能匹配 “z”。+ 等价于 {1,}。</td></tr><tr><td align="left">?</td><td align="left">匹配前面的子表达式零次或一次。例如，”do(es)?” 可以匹配 “do” 、 “does” 中的 “does” 、 “doxy” 中的 “do” 。? 等价于 {0,1}。</td></tr><tr><td align="left">{n}</td><td align="left">n 是一个非负整数。匹配确定的 n 次。例如，’o{2}’ 不能匹配 “Bob” 中的 ‘o’，但是能匹配 “food” 中的两个 o。</td></tr><tr><td align="left">{n,}</td><td align="left">n 是一个非负整数。至少匹配n 次。例如，’o{2,}’ 不能匹配 “Bob” 中的 ‘o’，但能匹配 “foooood” 中的所有 o。’o{1,}’ 等价于 ‘o+’。’o{0,}’ 则等价于 ‘o*’。</td></tr><tr><td align="left">{n,m}</td><td align="left">m 和 n 均为非负整数，其中n &lt;= m。最少匹配 n 次且最多匹配 m 次。例如，”o{1,3}” 将匹配 “fooooood” 中的前三个 o。’o{0,1}’ 等价于 ‘o?’。请注意在逗号和两个数之间不能有空格。</td></tr></tbody></table><p>以下正则表达式匹配一个正整数，**[1-9]<strong>设置第一个数字不是 0，</strong>[0-9]*** 表示任意多个数字：</p><pre class="line-numbers language-none"><code class="language-none">/[1-9][0-9]*/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/F249891D-F3D9-48D5-A3CB-6FD8FD029117.jpg"></p><p>请注意，限定符出现在范围表达式之后。因此，它应用于整个范围表达式，在本例中，只指定从 0 到 9 的数字（包括 0 和 9）。</p><p>这里不使用 + 限定符，因为在第二个位置或后面的位置不一定需要有一个数字。也不使用 ? 字符，因为使用 ? 会将整数限制到只有两位数。</p><p>如果你想设置 0~99 的两位数，可以使用下面的表达式来至少指定一位但至多两位数字。</p><pre class="line-numbers language-none"><code class="language-none">/[0-9]{1,2}/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>上面的表达式的缺点是，只能匹配两位数字，而且可以匹配 0、00、01、10 99 的章节编号仍只匹配开头两位数字。</p><p>改进下，匹配 1~99 的正整数表达式如下：</p><pre class="line-numbers language-none"><code class="language-none">/[1-9][0-9]?/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>或</p><pre class="line-numbers language-none"><code class="language-none">/[1-9][0-9]{0,1}/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p> <strong>*</strong> 和 <strong>+</strong> 限定符都是贪婪的，因为它们会尽可能多的匹配文字，只有在它们的后面加上一个 ? 就可以实现非贪婪或最小匹配。</p><p>例如，您可能搜索 HTML 文档，以查找在 <strong>h1</strong> 标签内的内容。HTML 代码如下：</p><pre class="line-numbers language-none"><code class="language-none">&lt;h1&gt;RUNOOB-菜鸟教程&lt;/h1&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>贪婪：</strong>下面的表达式匹配从开始小于符号 (&lt;) 到关闭 h1 标记的大于符号 (&gt;) 之间的所有内容。</p><pre class="line-numbers language-none"><code class="language-none">/&lt;.*&gt;/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/AD8F3320-2F2E-4513-9BB5-84450D62783D.jpg"></p><p><strong>非贪婪：</strong>如果您只需要匹配开始和结束 h1 标签，下面的非贪婪表达式只匹配 &lt;h1&gt;。</p><pre class="line-numbers language-none"><code class="language-none">/&lt;.*?&gt;/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/A6E72665-CE61-46F4-A72B-A34BC13F5820.jpg"></p><p>也可以使用以下正则表达式来匹配 h1 标签，表达式则是：</p><pre class="line-numbers language-none"><code class="language-none">/&lt;\w+?&gt;/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/C6E89F76-D059-4600-A507-74C42306A790.jpg"></p><p>通过在 *<strong><strong>、</strong>+</strong> 或 <strong>?</strong> 限定符之后放置 <strong>?</strong> ，该表达式从”贪婪”表达式转换为”非贪婪”表达式或者最小匹配。</p><hr><h2 id="定位符"><a href="#定位符" class="headerlink" title="定位符"></a>定位符</h2><p>定位符使您能够将正则表达式固定到行首或行尾。它们还使您能够创建这样的正则表达式，这些正则表达式出现在一个单词内、在一个单词的开头或者一个单词的结尾。</p><p>定位符用来描述字符串或单词的边界，<strong>^</strong> 和 <strong>$</strong> 分别指字符串的开始与结束，<strong>\b</strong> 描述单词的前或后边界，<strong>\B</strong> 表示非单词边界。</p><p>正则表达式的定位符有：</p><table><thead><tr><th align="left">字符</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">^</td><td align="left">匹配输入字符串开始的位置。如果设置了 RegExp 对象的 Multiline 属性，^ 还会与 \n 或 \r 之后的位置匹配。</td></tr><tr><td align="left">$</td><td align="left">匹配输入字符串结尾的位置。如果设置了 RegExp 对象的 Multiline 属性，$ 还会与 \n 或 \r 之前的位置匹配。</td></tr><tr><td align="left">\b</td><td align="left">匹配一个单词边界，即字与空格间的位置。</td></tr><tr><td align="left">\B</td><td align="left">非单词边界匹配。</td></tr></tbody></table><p><strong>注意</strong>：不能将限定符与定位符一起使用。由于在紧靠换行或者单词边界的前面或后面不能有一个以上位置，因此不允许诸如 <strong>^*</strong> 之类的表达式。</p><p>若要匹配一行文本开始处的文本，请在正则表达式的开始使用 <strong>^</strong> 字符。不要将 <strong>^</strong> 的这种用法与中括号表达式内的用法混淆。</p><p>若要匹配一行文本的结束处的文本，请在正则表达式的结束处使用 <strong>$</strong> 字符。</p><p>若要在搜索章节标题时使用定位点，下面的正则表达式匹配一个章节标题，该标题只包含两个尾随数字，并且出现在行首：</p><pre class="line-numbers language-none"><code class="language-none">/^Chapter [1-9][0-9]{0,1}/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>真正的章节标题不仅出现行的开始处，而且它还是该行中仅有的文本。它既出现在行首又出现在同一行的结尾。下面的表达式能确保指定的匹配只匹配章节而不匹配交叉引用。通过创建只匹配一行文本的开始和结尾的正则表达式，就可做到这一点。</p><pre class="line-numbers language-none"><code class="language-none">/^Chapter [1-9][0-9]{0,1}$/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>匹配单词边界稍有不同，但向正则表达式添加了很重要的能力。单词边界是单词和空格之间的位置。非单词边界是任何其他位置。下面的表达式匹配单词 Chapter 的开头三个字符，因为这三个字符出现在单词边界后面：</p><pre class="line-numbers language-none"><code class="language-none">/\bCha/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>\b</strong> 字符的位置是非常重要的。如果它位于要匹配的字符串的开始，它在单词的开始处查找匹配项。如果它位于字符串的结尾，它在单词的结尾处查找匹配项。例如，下面的表达式匹配单词 Chapter 中的字符串 ter，因为它出现在单词边界的前面：</p><pre class="line-numbers language-none"><code class="language-none">/ter\b/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>下面的表达式匹配 Chapter 中的字符串 apt，但不匹配 aptitude 中的字符串 apt：</p><pre class="line-numbers language-none"><code class="language-none">/\Bapt/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>字符串 apt 出现在单词 Chapter 中的非单词边界处，但出现在单词 aptitude 中的单词边界处。对于 <strong>\B</strong> 非单词边界运算符，位置并不重要，因为匹配不关心究竟是单词的开头还是结尾。</p><h2 id="选择"><a href="#选择" class="headerlink" title="选择"></a>选择</h2><p>用圆括号 <strong>()</strong> 将所有选择项括起来，相邻的选择项之间用 <strong>|</strong> 分隔。</p><p><strong>()</strong> 表示捕获分组， <strong>()</strong> 会把每个分组里的匹配的值保存起来， 多个匹配值可以通过数字 n 来查看(<strong>n</strong> 是一个数字，表示第 n 个捕获组的内容)。</p><p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/366574CC-3706-4B4C-8782-1BFF4CF57582.jpg"></p><p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/82A7298A-2A94-49E3-AA27-A7778EE89711.jpg"></p><p>但用圆括号会有一个副作用，使相关的匹配会被缓存，此时可用 <strong>?:</strong> 放在第一个选项前来消除这种副作用。</p><p>其中 <strong>?:</strong> 是非捕获元之一，还有两个非捕获元是 <strong>?=</strong> 和 <strong>?!</strong> ，这两个还有更多的含义，前者为正向预查，在任何开始匹配圆括号内的正则表达式模式的位置来匹配搜索字符串，后者为负向预查，在任何开始不匹配该正则表达式模式的位置来匹配搜索字符串。</p><h3 id="以下列出-、-lt-、-、-lt-的使用区别"><a href="#以下列出-、-lt-、-、-lt-的使用区别" class="headerlink" title="以下列出 ?=、?<=、?!、?<! 的使用区别"></a>以下列出 ?=、?&lt;=、?!、?&lt;! 的使用区别</h3><p> <strong>exp1(?=exp2)</strong> ：查找 exp2 前面的 exp1。</p><p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/reg-111.jpg"></p><p><strong>(?&lt;=exp2)exp1</strong>：查找 exp2 后面的 exp1。</p><p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/reg-222.jpg"></p><p><strong>exp1(?!exp2)</strong> ：查找后面不是 exp2 的 exp1。</p><p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/reg-333.jpg"></p><p><strong>(?&lt;!exp2)exp1</strong>：查找前面不是 exp2 的 exp1。</p><p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/reg-444.jpg"></p><blockquote><p>更多内容可以参考：<a href="https://www.runoob.com/w3cnote/reg-lookahead-lookbehind.html">正则表达式的先行断言(lookahead)和后行断言(lookbehind)</a></p></blockquote><hr><h2 id="反向引用"><a href="#反向引用" class="headerlink" title="反向引用"></a>反向引用</h2><p>对一个正则表达式模式或部分模式两边添加圆括号将导致相关匹配存储到一个临时缓冲区中，所捕获的每个子匹配都按照在正则表达式模式中从左到右出现的顺序存储。缓冲区编号从 1 开始，最多可存储 99 个捕获的子表达式。每个缓冲区都可以使用 <strong>\n</strong> 访问，其中 n 为一个标识特定缓冲区的一位或两位十进制数。</p><p>可以使用非捕获元字符 <strong>?:<strong>、</strong>?=</strong> 或 <strong>?!</strong> 来重写捕获，忽略对相关匹配的保存。</p><p>反向引用的最简单的、最有用的应用之一，是提供查找文本中两个相同的相邻单词的匹配项的能力。以下面的句子为例：</p><pre class="line-numbers language-none"><code class="language-none">Is is the cost of of gasoline going up up?<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>上面的句子很显然有多个重复的单词。如果能设计一种方法定位该句子，而不必查找每个单词的重复出现，那该有多好。下面的正则表达式使用单个子表达式来实现这一点 ：链接 <a href="https://www.runoob.com/try/try.php?filename=tryjsref_regexp3">https://www.runoob.com/try/try.php?filename=tryjsref_regexp3</a></p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210910170028508.png" alt="" style="zoom: 67%;"> <p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210910170259432.png"> </p><p>捕获的表达式，正如 <strong>[a-z]+</strong> 指定的，包括一个或多个字母。正则表达式的第二部分是对以前捕获的子匹配项的引用，即，单词的第二个匹配项正好由括号表达式匹配。<strong>\1</strong> 指定第一个子匹配项。</p><p>单词边界元字符确保只检测整个单词。否则，诸如 “is issued” 或 “this is” 之类的词组将不能正确地被此表达式识别。</p><p>正则表达式后面的全局标记 <strong>g</strong> 指定将该表达式应用到输入字符串中能够查找到的尽可能多的匹配。</p><p>表达式的结尾处的不区分大小写 <strong>i</strong> 标记指定不区分大小写。</p><p>多行标记指定换行符的两边可能出现潜在的匹配。</p><p>反向引用还可以将通用资源指示符 (URI) 分解为其组件。假定您想将下面的 URI 分解为协议（ftp、http 等等）、域地址和页/路径：</p><pre class="line-numbers language-none"><code class="language-none">http://www.runoob.com:80/html/html-tutorial.html<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>下面的正则表达式提供该功能：链接 <a href="https://www.runoob.com/try/try.php?filename=tryjsref_regexp4">https://www.runoob.com/try/try.php?filename=tryjsref_regexp4</a></p><p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210910170455200.png"> </p><p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210910170542288.png"> </p><p>第三行代码 <strong>str.match(patt1)</strong> 返回一个数组，实例中的数组包含 5 个元素，索引 0 对应的是整个字符串，索引 1 对应第一个匹配符（括号内），以此类推。</p><p>第一个括号子表达式捕获 Web 地址的协议部分。该子表达式匹配在冒号和两个正斜杠前面的任何单词。</p><p>第二个括号子表达式捕获地址的域地址部分。子表达式匹配非 <strong>:</strong> 和 <strong>/</strong> 之后的一个或多个字符。</p><p>第三个括号子表达式捕获端口号（如果指定了的话）。该子表达式匹配冒号后面的零个或多个数字。只能重复一次该子表达式。</p><p>最后，第四个括号子表达式捕获 Web 地址指定的路径和 / 或页信息。该子表达式能匹配不包括 # 或空格字符的任何字符序列。</p><p>将正则表达式应用到上面的 URI，各子匹配项包含下面的内容：</p><ul><li>第一个括号子表达式包含 <strong>http</strong></li><li>第二个括号子表达式包含 <strong><a href="http://www.runoob.com/">www.runoob.com</a></strong></li><li>第三个括号子表达式包含 <strong>:80</strong></li><li>第四个括号子表达式包含 <strong>/html/html-tutorial.html</strong></li></ul><h1 id="三、修饰符（标记）"><a href="#三、修饰符（标记）" class="headerlink" title="三、修饰符（标记）"></a>三、修饰符（标记）</h1><p>标记也称为修饰符，正则表达式的标记用于指定额外的匹配策略。</p><p>标记不写在正则表达式里，标记位于表达式之外，格式如下：</p><pre class="line-numbers language-none"><code class="language-none">/pattern/flags<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>下表列出了正则表达式常用的修饰符：</p><table><thead><tr><th align="left">修饰符</th><th align="left">含义</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">i</td><td align="left">ignore - 不区分大小写</td><td align="left">将匹配设置为不区分大小写，搜索时不区分大小写: A 和 a 没有区别。</td></tr><tr><td align="left">g</td><td align="left">global - 全局匹配</td><td align="left">查找所有的匹配项。</td></tr><tr><td align="left">m</td><td align="left">multi line - 多行匹配</td><td align="left">使边界字符 <strong>^</strong> 和 <strong>$</strong> 匹配每一行的开头和结尾，记住是多行，而不是整个字符串的开头和结尾。</td></tr><tr><td align="left">s</td><td align="left">特殊字符圆点 <strong>.</strong> 中包含换行符 <strong>\n</strong></td><td align="left">默认情况下的圆点 <strong>.</strong> 是 匹配除换行符 <strong>\n</strong> 之外的任何字符，加上 <strong>s</strong> 修饰符之后, <strong>.</strong> 中包含换行符 \n。</td></tr></tbody></table><h3 id="g-修饰符"><a href="#g-修饰符" class="headerlink" title="g 修饰符"></a>g 修饰符</h3><p>g 修饰符可以查找字符串中所有的匹配项：</p><p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/D1A5F1E7-E25E-448E-9BE3-68508E058E99.jpg"></p><p>实例<br><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210910171220928.png"> </p><p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210910171243134.png"><br><a href="https://www.runoob.com/try/try.php?filename=tryjsref_match_regexp4">尝试一下 »</a></p><h3 id="i-修饰符"><a href="#i-修饰符" class="headerlink" title="i 修饰符"></a>i 修饰符</h3><p>i 修饰符为不区分大小写匹配，实例如下：</p><p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/FF2D211D-0B88-492C-BAA4-04183278383E.jpg"></p><p>实例<br><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210910171433999.png"> </p><p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210910171452455.png"><br><a href="https://www.runoob.com/try/try.php?filename=tryjsref_match_regexp3">尝试一下 »</a></p><h3 id="m-修饰符"><a href="#m-修饰符" class="headerlink" title="m 修饰符"></a>m 修饰符</h3><p>m 修饰符可以使 <strong>^</strong> 和 <strong>$</strong> 匹配一段文本中每行的开始和结束位置。</p><p>g 只匹配第一行，添加 m 之后实现多行。</p><p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/BC3E6D8A-21D2-44F8-A1AE-D90C4939D37A.jpg"></p><p>以下实例字符串中使用 <strong>\n</strong> 来换行：</p><p>实例<br><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210910171625576.png"> </p><p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210910171644247.png"> </p><p><a href="https://www.runoob.com/try/try.php?filename=tryjsref_match_regexp6">尝试一下 »</a></p><h3 id="s-修饰符"><a href="#s-修饰符" class="headerlink" title="s 修饰符"></a>s 修饰符</h3><p>默认情况下的圆点 <strong>.</strong> 是 匹配除换行符 <strong>\n</strong> 之外的任何字符，加上 s 之后, <strong>.</strong> 中包含换行符 <strong>\n</strong>。</p><p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/5CDFC964-F0C4-4ADE-80F3-17FB4748DE14.jpg"> </p><p>s 修饰符实例如下：</p><p>实例<br><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210910171723138.png"> </p><p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210910171738473.png"><br><a href="https://www.runoob.com/try/try.php?filename=tryjsref_match_regexp5">尝试一下 »</a></p><h1 id="四、元字符"><a href="#四、元字符" class="headerlink" title="四、元字符"></a>四、元字符</h1><p>下表包含了元字符的完整列表以及它们在正则表达式上下文中的行为：</p><table><thead><tr><th align="left">字符</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">\</td><td align="left">将下一个字符标记为一个特殊字符、或一个原义字符、或一个 向后引用、或一个八进制转义符。例如，’n’ 匹配字符 “n”。’\n’ 匹配一个换行符。序列 ‘\‘ 匹配 “" 而 “(“ 则匹配 “(“。</td></tr><tr><td align="left">^</td><td align="left">匹配输入字符串的开始位置。如果设置了 RegExp 对象的 Multiline 属性，^ 也匹配 ‘\n’ 或 ‘\r’ 之后的位置。</td></tr><tr><td align="left">$</td><td align="left">匹配输入字符串的结束位置。如果设置了RegExp 对象的 Multiline 属性，$ 也匹配 ‘\n’ 或 ‘\r’ 之前的位置。</td></tr><tr><td align="left">*</td><td align="left">匹配前面的子表达式零次或多次。例如，zo* 能匹配 “z” 以及 “zoo”。* 等价于{0,}。</td></tr><tr><td align="left">+</td><td align="left">匹配前面的子表达式一次或多次。例如，’zo+’ 能匹配 “zo” 以及 “zoo”，但不能匹配 “z”。+ 等价于 {1,}。</td></tr><tr><td align="left">?</td><td align="left">匹配前面的子表达式零次或一次。例如，”do(es)?” 可以匹配 “do” 或 “does” 。? 等价于 {0,1}。</td></tr><tr><td align="left">{n}</td><td align="left">n 是一个非负整数。匹配确定的 n 次。例如，’o{2}’ 不能匹配 “Bob” 中的 ‘o’，但是能匹配 “food” 中的两个 o。</td></tr><tr><td align="left">{n,}</td><td align="left">n 是一个非负整数。至少匹配n 次。例如，’o{2,}’ 不能匹配 “Bob” 中的 ‘o’，但能匹配 “foooood” 中的所有 o。’o{1,}’ 等价于 ‘o+’。’o{0,}’ 则等价于 ‘o*’。</td></tr><tr><td align="left">{n,m}</td><td align="left">m 和 n 均为非负整数，其中n &lt;= m。最少匹配 n 次且最多匹配 m 次。例如，”o{1,3}” 将匹配 “fooooood” 中的前三个 o。’o{0,1}’ 等价于 ‘o?’。请注意在逗号和两个数之间不能有空格。</td></tr><tr><td align="left">?</td><td align="left">当该字符紧跟在任何一个其他限制符 (*, +, ?, {n}, {n,}, {n,m}) 后面时，匹配模式是非贪婪的。非贪婪模式尽可能少的匹配所搜索的字符串，而默认的贪婪模式则尽可能多的匹配所搜索的字符串。例如，对于字符串 “oooo”，’o+?’ 将匹配单个 “o”，而 ‘o+’ 将匹配所有 ‘o’。</td></tr><tr><td align="left">.</td><td align="left">匹配除换行符（\n、\r）之外的任何单个字符。要匹配包括 ‘\n’ 在内的任何字符，请使用像”<strong>(.|\n)</strong>“的模式。</td></tr><tr><td align="left">(pattern)</td><td align="left">匹配 pattern 并获取这一匹配。所获取的匹配可以从产生的 Matches 集合得到，在VBScript 中使用 SubMatches 集合，在JScript 中则使用 $0…$9 属性。要匹配圆括号字符，请使用 ‘(‘ 或 ‘)‘。</td></tr><tr><td align="left">(?:pattern)</td><td align="left">匹配 pattern 但不获取匹配结果，也就是说这是一个非获取匹配，不进行存储供以后使用。这在使用 “或” 字符 (|) 来组合一个模式的各个部分是很有用。例如， ‘industr(?:y|ies) 就是一个比 ‘industry|industries’ 更简略的表达式。</td></tr><tr><td align="left">(?=pattern)</td><td align="left">正向肯定预查（look ahead positive assert），在任何匹配pattern的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如，”Windows(?=95|98|NT|2000)”能匹配”Windows2000”中的”Windows”，但不能匹配”Windows3.1”中的”Windows”。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始。</td></tr><tr><td align="left">(?!pattern)</td><td align="left">正向否定预查(negative assert)，在任何不匹配pattern的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如”Windows(?!95|98|NT|2000)”能匹配”Windows3.1”中的”Windows”，但不能匹配”Windows2000”中的”Windows”。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始。</td></tr><tr><td align="left">(?&lt;=pattern)</td><td align="left">反向(look behind)肯定预查，与正向肯定预查类似，只是方向相反。例如，”`(?&lt;=95</td></tr><tr><td align="left">(?&lt;!pattern)</td><td align="left">反向否定预查，与正向否定预查类似，只是方向相反。例如”`(?&lt;!95</td></tr><tr><td align="left">x|y</td><td align="left">匹配 x 或 y。例如，’z|food’ 能匹配 “z” 或 “food”。’(z|f)ood’ 则匹配 “zood” 或 “food”。</td></tr><tr><td align="left">[xyz]</td><td align="left">字符集合。匹配所包含的任意一个字符。例如， ‘[abc]’ 可以匹配 “plain” 中的 ‘a’。</td></tr><tr><td align="left">[^xyz]</td><td align="left">负值字符集合。匹配未包含的任意字符。例如， ‘[^abc]’ 可以匹配 “plain” 中的’p’、’l’、’i’、’n’。</td></tr><tr><td align="left">[a-z]</td><td align="left">字符范围。匹配指定范围内的任意字符。例如，’[a-z]’ 可以匹配 ‘a’ 到 ‘z’ 范围内的任意小写字母字符。</td></tr><tr><td align="left">[^a-z]</td><td align="left">负值字符范围。匹配任何不在指定范围内的任意字符。例如，’[^a-z]’ 可以匹配任何不在 ‘a’ 到 ‘z’ 范围内的任意字符。</td></tr><tr><td align="left">\b</td><td align="left">匹配一个单词边界，也就是指单词和空格间的位置。例如， ‘er\b’ 可以匹配”never” 中的 ‘er’，但不能匹配 “verb” 中的 ‘er’。</td></tr><tr><td align="left">\B</td><td align="left">匹配非单词边界。’er\B’ 能匹配 “verb” 中的 ‘er’，但不能匹配 “never” 中的 ‘er’。</td></tr><tr><td align="left">\cx</td><td align="left">匹配由 x 指明的控制字符。例如， \cM 匹配一个 Control-M 或回车符。x 的值必须为 A-Z 或 a-z 之一。否则，将 c 视为一个原义的 ‘c’ 字符。</td></tr><tr><td align="left">\d</td><td align="left">匹配一个数字字符。等价于 [0-9]。</td></tr><tr><td align="left">\D</td><td align="left">匹配一个非数字字符。等价于 [^0-9]。</td></tr><tr><td align="left">\f</td><td align="left">匹配一个换页符。等价于 \x0c 和 \cL。</td></tr><tr><td align="left">\n</td><td align="left">匹配一个换行符。等价于 \x0a 和 \cJ。</td></tr><tr><td align="left">\r</td><td align="left">匹配一个回车符。等价于 \x0d 和 \cM。</td></tr><tr><td align="left">\s</td><td align="left">匹配任何空白字符，包括空格、制表符、换页符等等。等价于 [ \f\n\r\t\v]。</td></tr><tr><td align="left">\S</td><td align="left">匹配任何非空白字符。等价于 [^ \f\n\r\t\v]。</td></tr><tr><td align="left">\t</td><td align="left">匹配一个制表符。等价于 \x09 和 \cI。</td></tr><tr><td align="left">\v</td><td align="left">匹配一个垂直制表符。等价于 \x0b 和 \cK。</td></tr><tr><td align="left">\w</td><td align="left">匹配字母、数字、下划线。等价于’[A-Za-z0-9_]’。</td></tr><tr><td align="left">\W</td><td align="left">匹配非字母、数字、下划线。等价于 ‘[^A-Za-z0-9_]’。</td></tr><tr><td align="left">\xn</td><td align="left">匹配 n，其中 n 为十六进制转义值。十六进制转义值必须为确定的两个数字长。例如，’\x41’ 匹配 “A”。’\x041’ 则等价于 ‘\x04’ &amp; “1”。正则表达式中可以使用 ASCII 编码。</td></tr><tr><td align="left">\num</td><td align="left">匹配 num，其中 num 是一个正整数。对所获取的匹配的引用。例如，’(.)\1’ 匹配两个连续的相同字符。</td></tr><tr><td align="left">\n</td><td align="left">标识一个八进制转义值或一个向后引用。如果 \n 之前至少 n 个获取的子表达式，则 n 为向后引用。否则，如果 n 为八进制数字 (0-7)，则 n 为一个八进制转义值。</td></tr><tr><td align="left">\nm</td><td align="left">标识一个八进制转义值或一个向后引用。如果 \nm 之前至少有 nm 个获得子表达式，则 nm 为向后引用。如果 \nm 之前至少有 n 个获取，则 n 为一个后跟文字 m 的向后引用。如果前面的条件都不满足，若 n 和 m 均为八进制数字 (0-7)，则 \nm 将匹配八进制转义值 nm。</td></tr><tr><td align="left">\nml</td><td align="left">如果 n 为八进制数字 (0-3)，且 m 和 l 均为八进制数字 (0-7)，则匹配八进制转义值 nml。</td></tr><tr><td align="left">\un</td><td align="left">匹配 n，其中 n 是一个用四个十六进制数字表示的 Unicode 字符。例如， \u00A9 匹配版权符号 (?)。</td></tr></tbody></table><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210910172328949.png"> </p><p><a href="https://www.runoob.com/try/try.php?filename=tryjsref_regexp-metachar">尝试一下 »</a> </p><p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210910172351115.png"> </p><h1 id="五、运算优先级"><a href="#五、运算优先级" class="headerlink" title="五、运算优先级"></a>五、运算优先级</h1><p>正则表达式从左到右进行计算，并遵循优先级顺序，这与算术表达式非常类似。</p><p>相同优先级的从左到右进行运算，不同优先级的运算先高后低。下表从最高到最低说明了各种正则表达式运算符的优先级顺序：</p><table><thead><tr><th align="left">运算符</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">\</td><td align="left">转义符</td></tr><tr><td align="left">(), (?:), (?=), []</td><td align="left">圆括号和方括号</td></tr><tr><td align="left">*, +, ?, {n}, {n,}, {n,m}</td><td align="left">限定符</td></tr><tr><td align="left">^, $, \任何元字符、任何字符</td><td align="left">定位点和序列（即：位置和顺序）</td></tr><tr><td align="left">|</td><td align="left">替换，”或”操作 字符具有高于替换运算符的优先级，使得”m|food”匹配”m”或”food”。若要匹配”mood”或”food”，请使用括号创建子表达式，从而产生”(m|f)ood”。</td></tr></tbody></table><h1 id="六、匹配规则"><a href="#六、匹配规则" class="headerlink" title="六、匹配规则"></a>六、匹配规则</h1><h2 id="基本模式匹配"><a href="#基本模式匹配" class="headerlink" title="基本模式匹配"></a>基本模式匹配</h2><p>一切从最基本的开始。模式，是正则表达式最基本的元素，它们是一组描述字符串特征的字符。模式可以很简单，由普通的字符串组成，也可以非常复杂，往往用特殊的字符表示一个范围内的字符、重复出现，或表示上下文。例如：</p><pre class="line-numbers language-none"><code class="language-none">^once<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这个模式包含一个特殊的字符 <strong>^</strong>，表示该模式只匹配那些以 <strong>once</strong> 开头的字符串。例如该模式与字符串 <strong>“once upon a time”</strong> 匹配，与 <strong>“There once was a man from NewYork”</strong> 不匹配。正如如 <strong>^</strong> 符号表示开头一样， <strong>$</strong>   符号用来匹配那些以给定模式结尾的字符串。</p><pre class="line-numbers language-none"><code class="language-none">bucket$<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这个模式与 <strong>“Who kept all of this cash in a bucket”</strong> 匹配，与 <strong>“buckets”</strong> 不匹配。字符 <strong>^</strong> 和 <strong>$</strong> 同时使用时，表示精确匹配（字符串与模式一样）。例如：</p><pre class="line-numbers language-none"><code class="language-none">^bucket$<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>只匹配字符串 <strong>“bucket”</strong> 。如果一个模式不包括 <strong>^</strong> 和 <strong>$</strong> ，那么它与任何包含该模式的字符串匹配。例如模式：</p><pre class="line-numbers language-none"><code class="language-none">once<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>与字符串</p><pre class="line-numbers language-none"><code class="language-none">There once was a man from NewYorkWho kept all of his cash in a bucket.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>是匹配的。</p><p>在该模式中的字母 <strong>(o-n-c-e)</strong> 是字面的字符，也就是说，他们表示该字母本身，数字也是一样的。其他一些稍微复杂的字符，如标点符号和白字符（空格、制表符等），要用到转义序列。所有的转义序列都用反斜杠   \  打头。制表符的转义序列是 <strong>\t</strong> 。所以如果我们要检测一个字符串是否以制表符开头，可以用这个模式：</p><pre class="line-numbers language-none"><code class="language-none">^\t <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>类似的，用 <strong>\n</strong> 表示 <strong>“新行”</strong> ， <strong>\r</strong> 表示回车。其他的特殊符号，可以用在前面加上反斜杠，如反斜杠本身用 \ 表示，句号 <strong>.</strong> 用 <strong>.</strong> 表示，以此类推。</p><h2 id="字符簇"><a href="#字符簇" class="headerlink" title="字符簇"></a>字符簇</h2><p>在 INTERNET 的程序中，正则表达式通常用来验证用户的输入。当用户提交一个 FORM 以后，要判断输入的电话号码、地址、EMAIL 地址、信用卡号码等是否有效，用普通的基于字面的字符是不够的。</p><p>所以要用一种更自由的描述我们要的模式的办法，它就是字符簇。要建立一个表示所有元音字符的字符簇，就把所有的元音字符放在一个方括号里：</p><pre class="line-numbers language-none"><code class="language-none">[AaEeIiOoUu]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这个模式与任何元音字符匹配，但只能表示一个字符。用连字号可以表示一个字符的范围，如：</p><pre class="line-numbers language-none"><code class="language-none">[a-z] // 匹配所有的小写字母 [A-Z] // 匹配所有的大写字母 [a-zA-Z] // 匹配所有的字母 [0-9] // 匹配所有的数字 [0-9\.\-] // 匹配所有的数字，句号和减号 [ \f\r\t\n] // 匹配所有的白字符<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>同样的，这些也只表示一个字符，这是一个非常重要的。如果要匹配一个由一个小写字母和一位数字组成的字符串，比如 “z2”、”t6” 或 “g7”，但不是 “ab2”、”r2d3” 或 “b52” 的话，用这个模式：</p><pre class="line-numbers language-none"><code class="language-none">^[a-z][0-9]$<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>尽管 <strong>[a-z]</strong> 代表 26 个字母的范围，但在这里它只能与第一个字符是小写字母的字符串匹配。</p><p>前面曾经提到^表示字符串的开头，但它还有另外一个含义。当在一组方括号里使用 <strong>^</strong> 时，它表示”<strong>非</strong>“或”<strong>排除</strong>“的意思，常常用来剔除某个字符。还用前面的例子，我们要求第一个字符不能是数字：</p><pre class="line-numbers language-none"><code class="language-none">^[^0-9][0-9]$<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这个模式与 “&amp;5”、”g7”及”-2” 是匹配的，但与 “12”、”66” 是不匹配的。下面是几个排除特定字符的例子：</p><pre class="line-numbers language-none"><code class="language-none">[^a-z] //除了小写字母以外的所有字符 [^\\\/\^] //除了(\)(/)(^)之外的所有字符 [^\"\'] //除了双引号(")和单引号(')之外的所有字符<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>特殊字符 <strong>.</strong>(点，句号)在正则表达式中用来表示除了”新行”之外的所有字符。所以模式 <strong>^.5$</strong> 与任何两个字符的、以数字5结尾和以其他非”新行”字符开头的字符串匹配。模式 <strong>.</strong> 可以匹配任何字符串，<strong>换行符（\n、\r）除外</strong>。</p><p>PHP的正则表达式有一些内置的通用字符簇，列表如下：</p><table><thead><tr><th align="left">字符簇</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">[[:alpha:]]</td><td align="left">任何字母</td></tr><tr><td align="left">[[:digit:]]</td><td align="left">任何数字</td></tr><tr><td align="left">[[:alnum:]]</td><td align="left">任何字母和数字</td></tr><tr><td align="left">[[:space:]]</td><td align="left">任何空白字符</td></tr><tr><td align="left">[[:upper:]]</td><td align="left">任何大写字母</td></tr><tr><td align="left">[[:lower:]]</td><td align="left">任何小写字母</td></tr><tr><td align="left">[[:punct:]]</td><td align="left">任何标点符号</td></tr><tr><td align="left">[[:xdigit:]]</td><td align="left">任何16进制的数字，相当于[0-9a-fA-F]</td></tr></tbody></table><h2 id="确定重复出现"><a href="#确定重复出现" class="headerlink" title="确定重复出现"></a>确定重复出现</h2><p>到现在为止，你已经知道如何去匹配一个字母或数字，但更多的情况下，可能要匹配一个单词或一组数字。一个单词有若干个字母组成，一组数字有若干个单数组成。跟在字符或字符簇后面的花括号({})用来确定前面的内容的重复出现的次数。</p><table><thead><tr><th align="left">字符簇</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">^[a-zA-Z_]$</td><td align="left">所有的字母和下划线</td></tr><tr><td align="left">^[[:alpha:]]{3}$</td><td align="left">所有的3个字母的单词</td></tr><tr><td align="left">^a$</td><td align="left">字母a</td></tr><tr><td align="left">^a{4}$</td><td align="left">aaaa</td></tr><tr><td align="left">^a{2,4}$</td><td align="left">aa,aaa或aaaa</td></tr><tr><td align="left">^a{1,3}$</td><td align="left">a,aa或aaa</td></tr><tr><td align="left">^a{2,}$</td><td align="left">包含多于两个a的字符串</td></tr><tr><td align="left">^a{2,}</td><td align="left">如：aardvark和aaab，但apple不行</td></tr><tr><td align="left">a{2,}</td><td align="left">如：baad和aaa，但Nantucket不行</td></tr><tr><td align="left">\t{2}</td><td align="left">两个制表符</td></tr><tr><td align="left">.{2}</td><td align="left">所有的两个字符</td></tr></tbody></table><p>这些例子描述了花括号的三种不同的用法。一个数字 <strong>{x}</strong> 的意思是<strong>前面的字符或字符簇只出现x次</strong> ；一个数字加逗号 <strong>{x,}</strong> 的意思是<strong>前面的内容出现x或更多的次数</strong> ；两个数字用逗号分隔的数字 <strong>{x,y}</strong> 表示 <strong>前面的内容至少出现x次，但不超过y次</strong>。我们可以把模式扩展到更多的单词或数字：</p><pre class="line-numbers language-none"><code class="language-none">^[a-zA-Z0-9_]{1,}$      // 所有包含一个以上的字母、数字或下划线的字符串 ^[1-9][0-9]{0,}$        // 所有的正整数 ^\-{0,1}[0-9]{1,}$      // 所有的整数 ^[-]?[0-9]+\.?[0-9]+$   // 所有的浮点数<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>最后一个例子不太好理解，是吗？这么看吧：以一个可选的负号 (<strong>[-]?</strong>) 开头 (<strong>^</strong>)、跟着1个或更多的数字( <strong>[0-9]+</strong> )、和一个小数点(<strong>.</strong>)再跟上1个或多个数字( <strong>[0-9]+</strong> )，并且后面没有其他任何东西( <strong>$</strong> )。下面你将知道能够使用的更为简单的方法。</p><p>特殊字符 <strong>?</strong> 与 <strong>{0,1}</strong> 是相等的，它们都代表着： <strong>0个或1个前面的内容</strong> 或 <strong>前面的内容是可选的</strong> 。所以刚才的例子可以简化为：</p><pre class="line-numbers language-none"><code class="language-none">^\-?[0-9]{1,}\.?[0-9]{1,}$<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>特殊字符 <strong>*</strong> 与 <strong>{0,}</strong> 是相等的，它们都代表着 <strong>0 个或多个前面的内容</strong> 。最后，字符 <strong>+</strong> 与 <strong>{1,}</strong> 是相等的，表示 <strong>1 个或多个前面的内容</strong> ，所以上面的4个例子可以写成：</p><pre class="line-numbers language-none"><code class="language-none">^[a-zA-Z0-9_]+$      // 所有包含一个以上的字母、数字或下划线的字符串 ^[1-9][0-9]*$        // 所有的正整数 ^\-?[0-9]+$          // 所有的整数 ^[-]?[0-9]+(\.[0-9]+)?$ // 所有的浮点数<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>当然这并不能从技术上降低正则表达式的复杂性，但可以使它们更容易阅读。</p><h1 id="六、示例"><a href="#六、示例" class="headerlink" title="六、示例"></a>六、示例</h1><h2 id="a、校验数字的表达式"><a href="#a、校验数字的表达式" class="headerlink" title="a、校验数字的表达式"></a>a、校验数字的表达式</h2><ul><li>数字：<strong>^[0-9]*$</strong></li><li>n位的数字：<strong>^\d{n}$</strong></li><li>至少n位的数字<strong>：^\d{n,}$</strong></li><li>m-n位的数字：<strong>^\d{m,n}$</strong></li><li>零和非零开头的数字：<strong>^(0|[1-9][0-9]*)$</strong></li><li>非零开头的最多带两位小数的数字：<strong>^([1-9][0-9]*)+(.[0-9]{1,2})?$</strong></li><li>带1-2位小数的正数或负数：<strong>^(-)?\d+(.\d{1,2})$</strong></li><li>正数、负数、和小数：<strong>^(-|+)?\d+(.\d+)?$</strong></li><li>有两位小数的正实数：<strong>^[0-9]+(.[0-9]{2})?$</strong></li><li>有1~3位小数的正实数：<strong>^[0-9]+(.[0-9]{1,3})?$</strong></li><li>非零的正整数：<strong>^[1-9]\d*$ 或 ^([1-9][0-9]*){1,3}$ 或 ^+?[1-9][0-9]*$</strong></li><li>非零的负整数：<strong>^-[1-9][]0-9”*$ 或 ^-[1-9]\d*$</strong></li><li>非负整数：<strong>^\d+$ 或 ^[1-9]\d*|0$</strong></li><li>非正整数：<strong>^-[1-9]\d*|0$ 或 ^((-\d+)|(0+))$</strong></li><li>非负浮点数：<strong>^\d+(.\d+)?$ 或 ^[1-9]\d*.\d*|0.\d*[1-9]\d*|0?.0+|0$</strong></li><li>非正浮点数：<strong>^((-\d+(.\d+)?)|(0+(.0+)?))$ 或 ^(-([1-9]\d*.\d*|0.\d*[1-9]\d*))|0?.0+|0$</strong></li><li>正浮点数：<strong>^[1-9]\d*.\d*|0.\d*[1-9]\d*$ 或 ^(([0-9]+.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*.[0-9]+)|([0-9]*[1-9][0-9]*))$</strong></li><li>负浮点数：<strong>^-([1-9]\d*.\d*|0.\d*[1-9]\d*)$ 或 ^(-(([0-9]+.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*.[0-9]+)|([0-9]*[1-9][0-9]*)))$</strong></li><li>浮点数：<strong>^(-?\d+)(.\d+)?$ 或 ^-?([1-9]\d*.\d*|0.\d*[1-9]\d*|0?.0+|0)$</strong></li></ul><hr><h2 id="b、校验字符的表达式"><a href="#b、校验字符的表达式" class="headerlink" title="b、校验字符的表达式"></a>b、校验字符的表达式</h2><ul><li>汉字：<strong>^[\u4e00-\u9fa5]{0,}$</strong></li><li>英文和数字：<strong>^[A-Za-z0-9]+$ 或 ^[A-Za-z0-9]{4,40}$</strong></li><li>长度为3-20的所有字符：<strong>^.{3,20}$</strong></li><li>由26个英文字母组成的字符串：<strong>^[A-Za-z]+$</strong></li><li>由26个大写英文字母组成的字符串：<strong>^[A-Z]+$</strong></li><li>由26个小写英文字母组成的字符串：<strong>^[a-z]+$</strong></li><li>由数字和26个英文字母组成的字符串：<strong>^[A-Za-z0-9]+$</strong></li><li>由数字、26个英文字母或者下划线组成的字符串：<strong>^\w+$ 或 ^\w{3,20}$</strong></li><li>中文、英文、数字包括下划线：<strong>^[\u4E00-\u9FA5A-Za-z0-9_]+$</strong></li><li>中文、英文、数字但不包括下划线等符号： <strong>^[\u4E00-\u9FA5A-Za-z0-9]+$ 或 ^[\u4E00-\u9FA5A-Za-z0-9]{2,20}$</strong></li><li>可以输入含有^%&amp;’,;=?$"等字符： <strong>[^%&amp;’,;=?$\x22]+</strong></li><li>禁止输入含有~的字符： <strong>[^~\x22]+</strong></li></ul><hr><h2 id="c、特殊需求表达式"><a href="#c、特殊需求表达式" class="headerlink" title="c、特殊需求表达式"></a>c、特殊需求表达式</h2><ul><li>Email地址： <strong>^\w+([-+.]\w+)*@\w+([-.]\w+)*.\w+([-.]\w+)*$</strong></li><li>域名： <strong>[a-zA-Z0-9][-a-zA-Z0-9]{0,62}(.[a-zA-Z0-9][-a-zA-Z0-9]{0,62})+.?</strong></li><li>InternetURL： <strong>[a-zA-z]+://[^\s]* 或 ^http://([\w-]+.)+[\w-]+(/[\w-./?%&amp;=]*)?$</strong></li><li>手机号码：<strong>^(13[0-9]|14[5|7]|15[0|1|2|3|4|5|6|7|8|9]|18[0|1|2|3|5|6|7|8|9])\d{8}$</strong></li><li>电话号码(“XXX-XXXXXXX”、”XXXX-XXXXXXXX”、”XXX-XXXXXXX”、”XXX-XXXXXXXX”、”XXXXXXX”和”XXXXXXXX)：<strong>^((\d{3,4}-)|\d{3.4}-)?\d{7,8}$</strong></li><li>国内电话号码(0511-4405222、021-87888822)：<strong>\d{3}-\d{8}|\d{4}-\d{7}</strong></li><li>电话号码正则表达式（支持手机号码，3-4位区号，7-8位直播号码，1－4位分机号）: <strong>((\d{11})|^((\d{7,8})|(\d{4}|\d{3})-(\d{7,8})|(\d{4}|\d{3})-(\d{7,8})-(\d{4}|\d{3}|\d{2}|\d{1})|(\d{7,8})-(\d{4}|\d{3}|\d{2}|\d{1}))$)</strong></li><li>身份证号(15位、18位数字)，最后一位是校验位，可能为数字或字符X：**(^\d{15}$)|(^\d{18}$)|(^\d{17}(\d|X|x)$)**</li><li>帐号是否合法(字母开头，允许5-16字节，允许字母数字下划线)：<strong>^[a-zA-Z][a-zA-Z0-9_]{4,15}$</strong></li><li>密码(以字母开头，长度在6~18之间，只能包含字母、数字和下划线)：<strong>^[a-zA-Z]\w{5,17}$</strong></li><li>强密码(必须包含大小写字母和数字的组合，不能使用特殊字符，长度在 8-10 之间)：<strong>^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])[a-zA-Z0-9]{8,10}$</strong></li><li>强密码(必须包含大小写字母和数字的组合，可以使用特殊字符，长度在8-10之间)：<strong>^(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{8,10}$</strong></li><li>日期格式：<strong>^\d{4}-\d{1,2}-\d{1,2}</strong></li><li>一年的12个月(01～09和1～12)：<strong>^(0?[1-9]|1[0-2])$</strong></li><li>一个月的31天(01～09和1～31)：<strong>^((0?[1-9])|((1|2)[0-9])|30|31)$</strong></li><li>钱的输入格式：<ol><li>有四种钱的表示形式我们可以接受:”10000.00” 和 “10,000.00”, 和没有 “分” 的 “10000” 和 “10,000”：<strong>^[1-9][0-9]*$</strong></li><li>这表示任意一个不以0开头的数字,但是,这也意味着一个字符”0”不通过,所以我们采用下面的形式：<strong>^(0|[1-9][0-9]*)$</strong></li><li>一个0或者一个不以0开头的数字.我们还可以允许开头有一个负号：<strong>^(0|-?[1-9][0-9]*)$</strong></li><li>这表示一个0或者一个可能为负的开头不为0的数字.让用户以0开头好了.把负号的也去掉,因为钱总不能是负的吧。下面我们要加的是说明可能的小数部分：<strong>^[0-9]+(.[0-9]+)?$</strong></li><li>必须说明的是,小数点后面至少应该有1位数,所以”10.”是不通过的,但是 “10” 和 “10.2” 是通过的：<strong>^[0-9]+(.[0-9]{2})?$</strong></li><li>这样我们规定小数点后面必须有两位,如果你认为太苛刻了,可以这样：<strong>^[0-9]+(.[0-9]{1,2})?$</strong></li><li>这样就允许用户只写一位小数.下面我们该考虑数字中的逗号了,我们可以这样：<strong>^[0-9]{1,3}(,[0-9]{3})*(.[0-9]{1,2})?$</strong></li><li>1到3个数字,后面跟着任意个 逗号+3个数字,逗号成为可选,而不是必须：<strong>^([0-9]+|[0-9]{1,3}(,[0-9]{3})*)(.[0-9]{1,2})?$</strong></li><li>备注：这就是最终结果了,别忘了”+”可以用”*”替代如果你觉得空字符串也可以接受的话(奇怪,为什么?)最后,别忘了在用函数时去掉去掉那个反斜杠,一般的错误都在这里</li></ol></li><li>xml文件： <strong>^([a-zA-Z]+-?)+[a-zA-Z0-9]+\.[x|X][m|M][l|L]$</strong></li><li>中文字符的正则表达式： <strong>[\u4e00-\u9fa5]</strong></li><li>双字节字符： <strong>[^\x00-\xff] (包括汉字在内，可以用来计算字符串的长度(一个双字节字符长度计2，ASCII字符计1))</strong></li><li>空白行的正则表达式： <strong>\n\s*\r (可以用来删除空白行)</strong></li><li>HTML标记的正则表达式： <strong>&lt;(\S*?)[^&gt;]*&gt;.*?|&lt;.*? /&gt; ( 首尾空白字符的正则表达式：^\s*|\s*$或(^\s*)|(\s*$) (可以用来删除行首行尾的空白字符(包括空格、制表符、换页符等等)，非常有用的表达式)</strong></li><li>腾讯QQ号： <strong>[1-9][0-9]{4,} (腾讯QQ号从10000开始)</strong> </li><li>中国邮政编码： <strong>[1-9]\d{5}(?!\d) (中国邮政编码为6位数字)</strong></li><li>IPv4地址： <strong>((2(5[0-5]|[0-4]\d))|[0-1]?\d{1,2})(.((2(5[0-5]|[0-4]\d))|[0-1]?\d{1,2})){3}</strong></li></ul><h2 id="d-匹配-PicGo-图片的表达式"><a href="#d-匹配-PicGo-图片的表达式" class="headerlink" title="d. 匹配 PicGo 图片的表达式"></a>d. 匹配 PicGo 图片的表达式</h2><ul><li><p>用于匹配 alt=”xxx”： <strong>alt=”.+?\b”</strong></p></li><li><p>用于匹配 ![xxx]： <strong>![.+]</strong></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 精确搜索 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ET 环境配置</title>
      <link href="/BloodSoul.github.io/2021/09/08/et-huan-jing-pei-zhi/"/>
      <url>/BloodSoul.github.io/2021/09/08/et-huan-jing-pei-zhi/</url>
      
        <content type="html"><![CDATA[<h1 id="一、克隆-ET-工程"><a href="#一、克隆-ET-工程" class="headerlink" title="一、克隆 ET 工程"></a>一、克隆 ET 工程</h1><p>目前ET6暂时还没有支持 ILRuntime 热更</p><p>网站链接：<a href="https://github.com/egametang/ET">https://github.com/egametang/ET</a></p><p>克隆地址：<a href="https://github.com/egametang/ET.git">https://github.com/egametang/ET.git</a></p><p>网友添加的 ILRuntime 热更地址：</p><p>最大限度的保持了原有结构： <a href="https://github.com/mister91jiao/ET_ILRuntime/">https://github.com/mister91jiao/ET_ILRuntime/</a></p><p>同时添加了 FGUI，xAsset 流程：<a href="https://github.com/wqaetly/ET">https://github.com/wqaetly/ET</a></p><p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210908225504785.png" alt="image-20210908225504785"></p><h1 id="二、安装-Unity"><a href="#二、安装-Unity" class="headerlink" title="二、安装 Unity"></a>二、安装 Unity</h1><p>需要至少安装 Unity2020版本，推荐 Unity2020 的 LTS 版本</p><p>链接：<a href="https://unity.cn/releases">https://unity.cn/releases</a></p><p>安装时添加 IL2CPP 模块</p><p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210908225725496.png" alt="image-20210908225725496"> </p><h1 id="三、安装-MongoDB"><a href="#三、安装-MongoDB" class="headerlink" title="三、安装 MongoDB"></a>三、安装 MongoDB</h1><p>MongoDB 下载地址：<a href="https://www.mongodb.com/try/download/community">https://www.mongodb.com/try/download/community</a></p><p>可视化GUI MongoDB Compass 下载地址：<a href="https://www.mongodb.com/try/download/compass">https://www.mongodb.com/try/download/compass</a></p><h3 id="MongoDB-环境配置"><a href="#MongoDB-环境配置" class="headerlink" title="MongoDB 环境配置"></a>MongoDB 环境配置</h3><p>安装时一定要选择Custom，否则不会生成后续初始化需要的 bin 目录</p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210908230450099.png" alt="image-20210908230450099" style="zoom:67%;"> <p>在安装目录的 bin 目录下，shift + 右键 在此处打开 Powershell，输入如下指令，其中 -dbpath 后面的路径是你的 mongoDB 安装下的data路径</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mongod -dbpath D:<span class="token punctuation">\</span>MongoDB<span class="token punctuation">\</span>data<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>运行结果结果显示如下：</p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210908231131039.png" alt="image-20210908231131039" style="zoom: 67%;"> <p>在浏览器中输入  <a href="http://localhost:27017/">http://localhost:27017/</a> 显示如下表示成功</p><p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210908231237238.png" alt="image-20210908231237238"> </p><p>运行 MongoDB Compass 如下</p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210908231404085.png" alt="image-20210908231404085" style="zoom:67%;"> <img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210908231441781.png" alt="image-20210908231441781" style="zoom:67%;"> <p>点击 Connect，显示如下表示连接成功</p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210908231539087.png" alt="image-20210908231539087" style="zoom: 50%;">  <h1 id="四、配置服务端"><a href="#四、配置服务端" class="headerlink" title="四、配置服务端"></a>四、配置服务端</h1><p>在 .net 官网下载并安装 .NET 5.0 SDK 和 .NET Core 3.1 SDK  地址链接：<a href="https://dotnet.microsoft.com/download">https://dotnet.microsoft.com/download</a></p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210912225618591.png" alt="image-20210912225618591" style="zoom:67%;"> <p>.NET Core3.1 要求 VS 版本在 2019 16.11.2 及以上 </p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210912225815516.png" alt="image-20210912225815516" style="zoom: 80%;"> <p>建议如下库全部安装</p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210912230044375.png" alt="image-20210912230044375" style="zoom:67%;"> <p>安装完成后一定要重启电脑，重启电脑是为了让 .NET Core3.1 和  .NET 5.0 生效</p><p>在 Unity 中右键 Open in C# project 打开客户端，然后生成解决方案</p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210912230426700.png" alt="image-20210912230426700" style="zoom:67%;"> <p>在 ET 工程中 打开 Server 端工程，然后执行同样的方式进行编译</p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210912230602442.png" alt="image-20210912230602442" style="zoom:67%;"> <p>确保全部生成成功</p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210912230706019.png" alt="image-20210912230706019" style="zoom:67%;"> <h1 id="五、启动测试"><a href="#五、启动测试" class="headerlink" title="五、启动测试"></a>五、启动测试</h1><p>运行 Server.App</p><p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210912225345493.png" alt="image-20210912225345493"> </p><p>运行 init 场景</p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210912225146556.png" alt="image-20210912225146556" style="zoom:80%;"> <img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210912230815664.png" alt="image-20210912230815664" style="zoom: 80%;"> <p>小人自动行走，日志有输出即表示成功</p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210912230846891.png" alt="image-20210912230846891" style="zoom:67%;"> <img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210912230943197.png" alt="image-20210912230943197" style="zoom:67%;"> <h1 id="六-网友添加的-ILRuntime-版本启动流程"><a href="#六-网友添加的-ILRuntime-版本启动流程" class="headerlink" title="六 网友添加的 ILRuntime 版本启动流程"></a>六 网友添加的 ILRuntime 版本启动流程</h1><p>仓库地址：<a href="https://github.com/wqaetly/ET">https://github.com/wqaetly/ET</a></p><p>按造第四项配置服务端的流程，先编译客户端代码，在编译服务端代码</p><h5 id="6-1-生成-AB-资源"><a href="#6-1-生成-AB-资源" class="headerlink" title="6.1 生成 AB 资源"></a>6.1 生成 AB 资源</h5><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210912232458762.png" alt="image-20210912232458762" style="zoom:67%;"> <h5 id="6-2-生成-CLR"><a href="#6-2-生成-CLR" class="headerlink" title="6.2 生成 CLR"></a>6.2 生成 CLR</h5><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210912232633695.png" alt="image-20210912232633695" style="zoom:67%;"> <h5 id="6-3-启动资源服务器"><a href="#6-3-启动资源服务器" class="headerlink" title="6.3 启动资源服务器"></a>6.3 启动资源服务器</h5><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210912232741501.png" alt="image-20210912232741501" style="zoom:67%;"> <p>显示如下代表启动成功</p><p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210912232812885.png" alt="image-20210912232812885"> </p><h5 id="6-4-启动服务器"><a href="#6-4-启动服务器" class="headerlink" title="6.4 启动服务器"></a>6.4 启动服务器</h5><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210912233024927.png" alt="image-20210912233024927" style="zoom:67%;"> <p>也可以在 Tools -&gt; 打开服务器选项-&gt;启动服务器</p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210912233123773.png" alt="image-20210912233123773" style="zoom: 80%;"> <img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210912233151531.png" alt="image-20210912233151531" style="zoom:67%;"> <p>6.5 启动客户端</p><p>运行 Init 场景，显示账号登录界面，且控制台没有报错表示成功链接资源服务器成功</p><p>点击登录-&gt;匹配模式，进入到小人界面，且没有报错，表示服务器连接成功</p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210912233316034.png" alt="image-20210912233316034" style="zoom:67%;">  <img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210912233420983.png" alt="image-20210912233420983" style="zoom:80%;">  <img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210912233731118.png" alt="image-20210912233731118" style="zoom:67%;"> ]]></content>
      
      
      <categories>
          
          <category> ET </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ET </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>青青草原——草的俯视矫正、大小渐变</title>
      <link href="/BloodSoul.github.io/2021/08/28/ta/grass/qing-qing-cao-yuan-cao-de-fu-shi-jiao-zheng-da-xiao-jian-bian/"/>
      <url>/BloodSoul.github.io/2021/08/28/ta/grass/qing-qing-cao-yuan-cao-de-fu-shi-jiao-zheng-da-xiao-jian-bian/</url>
      
        <content type="html"><![CDATA[<h1 id="一、草的俯视大小矫正"><a href="#一、草的俯视大小矫正" class="headerlink" title="一、草的俯视大小矫正"></a>一、草的俯视大小矫正</h1><h4 id="实现方式"><a href="#实现方式" class="headerlink" title="实现方式"></a>实现方式</h4><p>step1：通过观察方向和竖直向上方向的叉乘（叉乘顺序不能变，Unity是右手坐标系，叉乘需要用左手），可以计算出上下左右各个区域的草，具体如下：</p><ol><li>叉乘结果的X，代表从前向后，也就是从Z轴负方向到Z轴正方向,中间为零</li><li>叉乘结果的Z，代表从右到左，也就是从X轴正方向到X轴负方向。一般使用是取反，以便与X轴对齐，即从X轴负方向到X轴正方向</li><li>通过结合计算的结果X,Z，便得出的从垂直向上的点到四周渐变的Mask值</li><li><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/%E5%8F%89%E4%B9%98%E7%BB%93%E6%9E%9C%E5%B1%95%E7%A4%BA.png" style="zoom:50%;"> </li></ol><p>step2：通过观察方向和竖直向上的点乘值，来作为俯视矫正的角度偏移值</p><p>step3：将计算的过的俯视矫正大小值，加入到顶点位置中</p><p>伪代码如下：</p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">half3 perspectiveMask = cross(ViewDir,(0,1,0));half3 perspectiveAngleMask = dot(viewDir,(0,1,0));half3 finalMask = half3(-perspectiveMask.z,0,perspectiveMask.x) * perspectiveAngleMask;half3 positionOS = positionOS + finalMask * * perspectiveInstensity;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="二、大小渐变"><a href="#二、大小渐变" class="headerlink" title="二、大小渐变"></a>二、大小渐变</h4>]]></content>
      
      
      <categories>
          
          <category> TA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 草地渲染 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>青青草原——草的颜色渐变、AO模拟、简易透光</title>
      <link href="/BloodSoul.github.io/2021/08/09/ta/grass/qing-qing-cao-yuan-cao-de-yan-se-jian-bian-ao-mo-ni-jian-yi-tou-guang/"/>
      <url>/BloodSoul.github.io/2021/08/09/ta/grass/qing-qing-cao-yuan-cao-de-yan-se-jian-bian-ao-mo-ni-jian-yi-tou-guang/</url>
      
        <content type="html"><![CDATA[<h1 id="一、草的颜色渐变"><a href="#一、草的颜色渐变" class="headerlink" title="一、草的颜色渐变"></a>一、草的颜色渐变</h1><h4 id="实现方式"><a href="#实现方式" class="headerlink" title="实现方式"></a>实现方式</h4><p>step1：定义两个渐变色</p><p>step2：定义渐变因子</p><p>step3：将渐变后的颜色与主颜色进行混合</p><p>伪代码如下：</p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">half4 gradientColor1;half4 gradientColor2;half gradientTerm;half4 finalGradientColor = lerp(gradientColor1,gradientColor2,gradientTerm);half3 finalColor = finalGradientColor.rgb * albedoColor.rgb;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="扩展方式"><a href="#扩展方式" class="headerlink" title="扩展方式"></a>扩展方式</h4><p>可以使用 noise 贴图或者程序 noise 计算，并把这个值加入的渐变色的混合因子中，来实现颜色的随机变换</p><h1 id="二、AO模拟"><a href="#二、AO模拟" class="headerlink" title="二、AO模拟"></a>二、AO模拟</h1><h4 id="实现方式-1"><a href="#实现方式-1" class="headerlink" title="实现方式"></a>实现方式</h4><p>step1：定义一个AO的颜色</p><p>step2：AO的Mask计算可以用如下方式：</p><ul><li>方式一：使用UV的V</li><li>方式二：使用法线和竖直向上及（0,1,0）的点乘值</li><li>方式三：使用第四套UV，并通过绘制贴图的 R 通道进行控制，也是本案例中采用方式</li></ul><p>step3：将AO的颜色与主颜色进行混合</p><p>伪代码如下：</p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">half4 AOColor;half AOMask = tex2D(_AOMaskTex,uv4);half4 finalAoColor = lerp(AOColor,half4(1,1,1,1),AOMask);half3 finalColor = finalAoColor.rgb * albedoColor.rgb;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="三、透光实现"><a href="#三、透光实现" class="headerlink" title="三、透光实现"></a>三、透光实现</h3><h4 id="实现方式-2"><a href="#实现方式-2" class="headerlink" title="实现方式"></a>实现方式</h4><p>step1：定义一个透光颜色</p><p>step2：观察方向的Mask计算：观察方向和主光源相反的方向越一致，透光的效果就越强烈，通过点乘计算，并将值重新映射到0,1</p><p>step3：贴图mask：使用第四套UV，并通过绘制贴图的 G 通道进行控制</p><p>step4：将透光的颜色与主贴图颜色进行 <strong>叠加</strong></p><p>伪代码如下：</p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">half4 subsurfaceColor;half viewMask = dot(viewDir,-lightDir);viewMask = viewMask * 0.5 + 0.5;half texMask = tex2D(_AOMaskTex,uv4);half4 finalSubsurfaceColor = subsurfaceColor * viewMask * texMask;half3 finalColor = finalSubsurfaceColor.rgb + albedoColor.rgb;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> TA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 草地渲染 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>青青草原——弯曲、震动、旋转</title>
      <link href="/BloodSoul.github.io/2021/08/08/ta/grass/qing-qing-cao-yuan-wan-qu-zhen-dong-xuan-zhuan/"/>
      <url>/BloodSoul.github.io/2021/08/08/ta/grass/qing-qing-cao-yuan-wan-qu-zhen-dong-xuan-zhuan/</url>
      
        <content type="html"><![CDATA[<h1 id="一、模型预处理处理"><a href="#一、模型预处理处理" class="headerlink" title="一、模型预处理处理"></a>一、模型预处理处理</h1><h4 id="为什么需要对模型进行预处理？"><a href="#为什么需要对模型进行预处理？" class="headerlink" title="为什么需要对模型进行预处理？"></a>为什么需要对模型进行预处理？</h4><p>草地渲染的主要困难点在于数量庞大，经常以万为单位，因为本人知识有限，暂时只能想到如下几点优化方式：</p><ol><li>对草进行场景划分管理，例如四叉树或八叉树，然后进行视锥体裁剪剔除，还可以利用 Compute Shader，Jobs 等进行加速处理</li><li>将部分草进行模型合并，大约在一万面左右，做成不同形状的预制体，然后进行摆放（<strong>本次学习使用该方案</strong>）</li><li>针对合并的草模型，可以使用LOD技术，优化性能</li></ol><h4 id="合并草模型"><a href="#合并草模型" class="headerlink" title="合并草模型"></a>合并草模型</h4><p>在 3ds Max 中对草进行模型合并，也可以使用 Unity 的其他插件（如：Mesh Baker）直接在Unity中合并</p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/%E8%8D%89%E5%90%88%E5%B9%B6.png" alt="草合并" style="zoom:50%;"> <h4 id="烘焙模型锚点"><a href="#烘焙模型锚点" class="headerlink" title="烘焙模型锚点"></a>烘焙模型锚点</h4><ul><li>为了能够更精细的控制每颗草的弯曲，我们可以将原本草的锚点位置坐标烘焙在模型的第四套UV通道中。</li><li>思路为：因为模型是合并的，每个草之间并不是连续的，都是独立的个体，所以模型面数之间必定存在断层，不连续的地方，由此入手，进行查找区分。</li><li>实现方式为从任意个面开始，向外扩散，直到出现不连续停止，被选中的面作为一个Element，然后进行该Element的顶点坐标相加去平均值。</li></ul><h6 id="伪代码如下"><a href="#伪代码如下" class="headerlink" title="伪代码如下"></a>伪代码如下</h6><pre class="line-numbers language-c#" data-language="c#"><code class="language-c#">// 计算元素var grassElements = new List&lt;int&gt;(vertexCount);for (int i = 0; i &lt; trianglesCount; i += 3){    var index1 = triangles[i + 0];    var index2 = triangles[i + 1];    var index3 = triangles[i + 2];    int element = 0;    if (grassElements[index1] != -1)    {        element = grassElements[index1];    }    else if (grassElements[index2] != -1)    {        element = grassElements[index2];    }    else if (grassElements[index3] != -1)    {        element = grassElements[index3];    }    else    {        element = elementCount;        elementCount++;    }    grassElements[index1] = element;    grassElements[index2] = element;    grassElements[index3] = element;}// 设置锚点for (int e = 0; e &lt; elementCount; e++){    var positions = new List&lt;Vector3&gt;();    for (int i = 0; i &lt; grassElements.Count; i++)    {        if (grassElements[i] == e)        {            positions.Add(vertices[i]);        }    }    float x = 0;    float z = 0;    for (int p = 0; p &lt; positions.Count; p++)    {        x = x + positions[p].x;        z = z + positions[p].z;    }    for (int i = 0; i &lt; grassElements.Count; i++)    {        if (grassElements[i] == e)        {            anchors[i] = new Vector4(x / positions.Count,0, z / positions.Count,0);        }    }    mesh.SetUVs(3, anchors);    }<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="使用顶点色"><a href="#使用顶点色" class="headerlink" title="使用顶点色"></a>使用顶点色</h4><ul><li>R通道：使用顶点色R通道控制运动的 Offset，这样可以使用顶点刷工具，来打破运动的规律性</li><li>G通道：使用G通道来控制弯曲程度</li><li>B通道：使用B通道来控制旋转程度</li><li>A通道：使用A通道来控制震动程度</li></ul><h1 id="二、XZ轴弯曲、Y轴旋转"><a href="#二、XZ轴弯曲、Y轴旋转" class="headerlink" title="二、XZ轴弯曲、Y轴旋转"></a>二、XZ轴弯曲、Y轴旋转</h1><h4 id="计算绕轴旋转"><a href="#计算绕轴旋转" class="headerlink" title="计算绕轴旋转"></a>计算绕轴旋转</h4><p>假设给定草的顶点坐标为Pos，旋转的角度为Angle，旋转后的坐标为ResultPos</p><p>绕着X轴计算方式为：</p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">half3 rotationAxis = half3(Pos.x,0,0);half3 otherAxis = half3(0,Pos.yz);ResultPos = rotationAxis + otherAxis * Cos(Angle) + Cross(half3(1,0,0),otherAxis) * Sin(Angle);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>绕着Y轴计算方式为：</p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">half3 rotationAxis = half3(0,Pos.y,0);half3 otherAxis = half3(Pos.x,0,Pos.z);ResultPos = rotationAxis + otherAxis * Cos(Angle) + Cross(half3(0,1,0),otherAxis) * Sin(Angle);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>绕着Z轴计算方式为：</p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">half3 rotationAxis = half3(0,0,Pos.z);half3 otherAxis = half3(Pos.xy,0);ResultPos = rotationAxis + otherAxis * Cos(Angle) + Cross(half3(0,0,1),otherAxis) * Sin(Angle);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="计算旋转的角度-AngleXZ"><a href="#计算旋转的角度-AngleXZ" class="headerlink" title="计算旋转的角度 AngleXZ"></a>计算旋转的角度 AngleXZ</h4><p>读取UV3的锚点信息并转换到世界空间下为AnchorsPosWS</p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">half variationValue = Fract(AnchorsPosWS.x + AnchorsPosWS.z + VertexColor.r);half2 angleXZ = Sin(PositionWS.xz * _Scale + variationValue + _Speed * _Time );half2 finalAngleXZ = angleXZ * _Amplitude * _MaxBendValue * VertexColor.g;//finalAngleXZ.x 为绕着Z轴旋转的角度//finalAngleXZ.Z 为绕着X轴旋转的角度<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>计算旋转的角度 AngleY</p><pre class="line-numbers language-none"><code class="language-none">half variationValue = Fract(AnchorsPosWS.x + AnchorsPosWS.z + VertexColor.r);half2 angleY = Sin(PositionWS.x * _Scale + variationValue + _Speed * _Time );half2 finalAngleY = angleY * _Amplitude * _MaxRollingValue * VertexColor.b;//finalAngleY 为绕着Y轴旋转的角度<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h1 id="三、震动"><a href="#三、震动" class="headerlink" title="三、震动"></a>三、震动</h1><h4 id="震动的计算方式"><a href="#震动的计算方式" class="headerlink" title="震动的计算方式"></a>震动的计算方式</h4><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">half variationValue = Fract(AnchorsPosWS.x + AnchorsPosWS.z + VertexColor.r) * _FlutterValue;half positionSum = PositionWS.x + PositionWS.y + PositionWS.z;half FlutterWave = Sin(positionSum * _Scale * 10 + variationValue + _Speed * _Time );half3 FinalFlutter = half3(FlutterWave,0,FlutterWave);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h1 id="四、最终结果"><a href="#四、最终结果" class="headerlink" title="四、最终结果"></a>四、最终结果</h1><p>为了较好的效果，将上述结算的结果作为模型空间中的变化。 使用模型空间坐标减去模型空间的锚点Anchor（因为旋转的计算，没有加上锚点，默认是在原点进行计算的），使得还原到原点，然后应用变化量，最后加加上锚点坐标记得最终模型空间顶点坐标。</p>]]></content>
      
      
      <categories>
          
          <category> TA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 草地渲染 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>青青草原——概述及目录</title>
      <link href="/BloodSoul.github.io/2021/08/07/ta/grass/qing-qing-cao-yuan-gai-shu-ji-mu-lu/"/>
      <url>/BloodSoul.github.io/2021/08/07/ta/grass/qing-qing-cao-yuan-gai-shu-ji-mu-lu/</url>
      
        <content type="html"><![CDATA[<h1 id="一、产生的原因"><a href="#一、产生的原因" class="headerlink" title="一、产生的原因"></a>一、产生的原因</h1><p>公司最近在做新的项目，项目内草效果感觉不是很好，自己对此也比较感兴趣，就趁着下班时间，对草地渲染进行研究学习，将学习的内容进行总结记录，方便自己查阅。如果恰巧能帮助到别人，那就更好了。</p><h1 id="二、最终效果"><a href="#二、最终效果" class="headerlink" title="二、最终效果"></a>二、最终效果</h1><iframe class="bilibili" src="//player.bilibili.com/player.html?aid=419673697&amp;bvid=BV123411r7oF&amp;cid=384526909&amp;page=1&amp;high_quality=1&amp;high_quality=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/%E9%9D%92%E9%9D%92%E8%8D%89%E5%8E%9F%E6%95%88%E6%9E%9C%E5%9B%BE.png" alt="青青草原效果图"></p><h1 id="三、系列目录"><a href="#三、系列目录" class="headerlink" title="三、系列目录"></a>三、系列目录</h1><ol><li>草自身的弯曲、震动、旋转</li><li>草的颜色渐变、AO模拟、简易透光</li><li>草的俯视矫正、大小渐变</li><li>打破统一的随机颜色效果</li><li>草的全局风力效果</li><li>草的全局多目标交互效果</li></ol>]]></content>
      
      
      <categories>
          
          <category> TA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 草地渲染 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从零开始搭建 Markdown 文档编写环境</title>
      <link href="/BloodSoul.github.io/2021/07/11/block/cong-ling-da-jian-markdown-wen-dang-bian-xie-huan-jing/"/>
      <url>/BloodSoul.github.io/2021/07/11/block/cong-ling-da-jian-markdown-wen-dang-bian-xie-huan-jing/</url>
      
        <content type="html"><![CDATA[<h1 id="一、Markdown-编辑器-Typora-环境配置"><a href="#一、Markdown-编辑器-Typora-环境配置" class="headerlink" title="一、Markdown 编辑器 Typora 环境配置"></a>一、Markdown 编辑器 Typora 环境配置</h1><blockquote><ol><li>下载并安装 Typora <a href="https://www.typora.io/">链接</a></li><li>下载 OneDark 主题皮肤 <a href="https://theme.typora.io/theme/OneDark/">链接</a></li><li>配置 OneDark 主题<ol><li>在Typora左上角 <code>文件-&gt;偏好设置-&gt;外观-&gt;打开主题文件夹</code><ol><li><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210711113853219.png" style="zoom: 50%;"> </li></ol></li><li>将解压后的 onedark.css 文件拷贝到其中</li><li>重启 Typora，在顶部选择<code>主题-&gt;Onedark</code></li></ol></li></ol></blockquote><h1 id="二、配置图床"><a href="#二、配置图床" class="headerlink" title="二、配置图床"></a>二、配置图床</h1><blockquote><ol><li>下载 PicGo <a href="https://molunerfinn.com/PicGo/">链接</a></li><li>按照 PicGo 配置手册，配置通信Token <a href="https://picgo.github.io/PicGo-Doc/zh/guide/config.html#github%E5%9B%BE%E5%BA%8A">链接</a></li><li>在 Typora 中配置 PiGo<ol><li>在Typora左上角 文件-&gt;偏好设置-&gt;图像按照下图配置</li><li><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210711113225363.png" style="zoom: 50%;"> </li></ol></li></ol></blockquote>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Command </tag>
            
            <tag> Zero2One </tag>
            
            <tag> Config </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从零搭建个人 Hexo 博客</title>
      <link href="/BloodSoul.github.io/2021/07/10/block/cong-ling-da-jian-ge-ren-hexo-bo-ke/"/>
      <url>/BloodSoul.github.io/2021/07/10/block/cong-ling-da-jian-ge-ren-hexo-bo-ke/</url>
      
        <content type="html"><![CDATA[<h1 id="一、准备工作"><a href="#一、准备工作" class="headerlink" title="一、准备工作"></a>一、准备工作</h1><h4 id="a-下载并安装-Node-js"><a href="#a-下载并安装-Node-js" class="headerlink" title="a. 下载并安装 Node.js"></a>a. 下载并安装 <a href="https://nodejs.org/zh-cn/download/"><strong>Node.js</strong></a></h4><p>打开 cmd 验证安装是否成功</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">node -v<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>显示出对应版本号，表示安装成功</p><p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210710194608900.png"> </p><p>查看 NPM 是否安装成功，输入如下指令</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> -v<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210710200815627.png"> </p><h4 id="b-下载并安装-Git-客户端"><a href="#b-下载并安装-Git-客户端" class="headerlink" title="b. 下载并安装 Git 客户端"></a>b. 下载并安装 <a href="https://git-scm.com/downloads"><strong>Git 客户端</strong></a></h4><p>打开 cmd 验证安装是否成功</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> --version<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>显示出对应版本号，表示安装成功</p><p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210710195514143.png"> </p><p>新建博客工程要存放的文件夹，我这边使用 Hexo_Matery，在Hexo_Matery文件夹内，鼠标右键-&gt;Git Bash Here，输入如下指令，设置淘宝源</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> config <span class="token builtin class-name">set</span> registry https://registry.npm.taobao.org<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="二、搭建-Hexo"><a href="#二、搭建-Hexo" class="headerlink" title="二、搭建 Hexo"></a>二、搭建 Hexo</h1><h4 id="a-初始-Hexo-指令集"><a href="#a-初始-Hexo-指令集" class="headerlink" title="a. 初始 Hexo 指令集"></a>a. 初始 Hexo 指令集</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-cli -g<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="b-初始化-Hexo-博客"><a href="#b-初始化-Hexo-博客" class="headerlink" title="b. 初始化 Hexo 博客"></a>b. 初始化 Hexo 博客</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo init<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="c-进行本地预览博客"><a href="#c-进行本地预览博客" class="headerlink" title="c. 进行本地预览博客"></a>c. 进行本地预览博客</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo s<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>打开浏览器输入：<a href="http://localhost:4000/">http://localhost:4000</a>，能够正常预览，表示搭建成功！</p><p><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210710211816860.png"> </p><h1 id="三、将-Hexo-部署到-GitHub"><a href="#三、将-Hexo-部署到-GitHub" class="headerlink" title="三、将 Hexo 部署到 GitHub"></a>三、将 Hexo 部署到 GitHub</h1><h4 id="a-配置-GitHub-环境"><a href="#a-配置-GitHub-环境" class="headerlink" title="a. 配置 GitHub 环境"></a>a. 配置 GitHub 环境</h4><blockquote><ul><li>注册 GitHub 账号：<a href="https://github.com/">https://github.com/</a></li><li>设置本地 Git 与 远端 GitHub 的密钥<ul><li>在你的博客文件夹内（我的示例为<code>Hexo_Matery文件夹</code>）鼠标右键-&gt;Git Bash Here</li><li>配置你的 git 全局账号，命令输入如下：<ul><li>git config –global user.name “你的Github用户名”</li><li>git config –global user.email “你的Github邮箱” </li></ul></li><li>配置 ssh key，命令输入如下：<ul><li>ssh-keygen -t rsa -C “你的Github邮箱”    (生成新的公钥)</li><li>less ~/.ssh/id_rsa.pub    （查看公钥，并将其复制）</li></ul></li><li>在 <a href="https://github.com/settings/keys">GitHub 设置界面</a>填入密钥</li><li>验证密钥是否通过，命令输入如下：<ul><li>ssh -T <a href="mailto:git@github.com">git@github.com</a></li></ul></li></ul></li><li>新建一个仓库资源 <a href="https://github.com/new">https://github.com/new</a>，该资源的 SSH Clone 地址后面要用到</li></ul></blockquote><h4 id="b-编写-Hexo-博客的部署项"><a href="#b-编写-Hexo-博客的部署项" class="headerlink" title="b. 编写 Hexo 博客的部署项"></a>b. 编写 Hexo 博客的部署项</h4><blockquote><ul><li>在 <code>Hexo_Matery文件夹</code> 内根目录下，打开 <code>_config.yml</code> 文件</li><li>在 deploy 项，按如下输入：<ul><li><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210710220753733.png" style="zoom: 80%;"> </li><li><code>url</code> 就是项目的 SSH Clone 地址，<code>branch</code> 为需要部署到的分支名称</li></ul></li></ul></blockquote><h4 id="c-部署并推送到-GitHub"><a href="#c-部署并推送到-GitHub" class="headerlink" title="c. 部署并推送到 GitHub"></a>c. 部署并推送到 GitHub</h4><blockquote><ul><li>在 <code>Hexo_Matery文件夹</code> 内根目录下，鼠标右键-&gt;Git Bash Here</li><li>安装 GitHub 部署插件，输入：npm install hexo-deployer-git –save</li><li>进行 GitHub 部署，输入：hexo clean &amp;&amp; hexo g&amp;&amp; hexo d</li><li>在你刚才创建的 GitHub 资源项目中，选择 <code>Settings</code></li><li>在 <code>Settings</code> 界面中选择左下角的 <code>Pages</code>，选择对应分支（示例为 <code>master</code>），然后点击 <code>Save</code></li><li><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210710222300137.png" style="zoom: 50%;"> </li><li>中间生成的链接即是你的博客地址</li></ul></blockquote><h4 id="d-处理部署到-GitHub-上排版丢失问题"><a href="#d-处理部署到-GitHub-上排版丢失问题" class="headerlink" title="d. 处理部署到 GitHub 上排版丢失问题"></a>d. 处理部署到 GitHub 上排版丢失问题</h4><blockquote><ul><li>复制 c 步骤最后生成的地址</li><li>在 <code>Hexo_Matery文件夹</code> 内根目录下，打开 <code>_config.yml</code> 文件</li><li>将地址填入 <code>url</code> 项</li><li>并将 <code>root</code> （没有这手动写一个）项改成 “/you_project_name/“</li><li>在 <code>Hexo_Matery文件夹</code> 内根目录下，鼠标右键-&gt;Git Bash Here，输入：hexo clean &amp;&amp; hexo g&amp;&amp; hexo d</li><li><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210710223221224.png" style="zoom:80%;"> </li></ul></blockquote><h1 id="四、使用-Matery-主题美化"><a href="#四、使用-Matery-主题美化" class="headerlink" title="四、使用 Matery 主题美化"></a>四、使用 Matery 主题美化</h1><p>详细使用方式请参见我的 <a href="https://klj35.github.io/BloodSoul.github.io/2021/07/02/block/matery-zhu-ti-shi-yong-shuo-ming/">Matery 主题使用说明</a></p><h1 id="五、进行备份"><a href="#五、进行备份" class="headerlink" title="五、进行备份"></a>五、进行备份</h1><blockquote><ul><li>在 <code>Hexo_Matery文件夹</code> 内根目录下，鼠标右键-&gt;Git Bash Here</li><li>安装备份插件，输入指令：npm install hexo-git-backup –save</li><li>在 <code>Hexo_Matery文件夹</code> 内根目录下，打开 <code>_config.yml</code> 文件，添加如下配置</li><li><img src="https://raw.githubusercontent.com/klj35/BloodSoulBlockImage/main/img/image-20210710225730474.png" style="zoom:80%;"> </li><li>仓库逗号后面的是备份成的分支名称</li><li>在 Git Bash 内输入命令：hexo b</li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Command </tag>
            
            <tag> Zero2One </tag>
            
            <tag> Config </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo 常用命令说明</title>
      <link href="/BloodSoul.github.io/2021/07/10/block/hexo-chang-yong-ming-ling-shuo-ming/"/>
      <url>/BloodSoul.github.io/2021/07/10/block/hexo-chang-yong-ming-ling-shuo-ming/</url>
      
        <content type="html"><![CDATA[<h1 id="Hexo-常用命令"><a href="#Hexo-常用命令" class="headerlink" title="Hexo 常用命令"></a>Hexo 常用命令</h1><h4 id="新建一个-Markdown-文档"><a href="#新建一个-Markdown-文档" class="headerlink" title="新建一个 Markdown 文档"></a>新建一个 Markdown 文档</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new <span class="token string">"markdown_name"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="新建一个页面"><a href="#新建一个页面" class="headerlink" title="新建一个页面"></a>新建一个页面</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new page <span class="token string">"page_name"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="新建一个草稿"><a href="#新建一个草稿" class="headerlink" title="新建一个草稿"></a>新建一个草稿</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new draft <span class="token string">"draft_name"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="发布草稿"><a href="#发布草稿" class="headerlink" title="发布草稿"></a>发布草稿</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo publish <span class="token string">"draft_name"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="清除缓存文件-db-json-和已生成的静态文件-public"><a href="#清除缓存文件-db-json-和已生成的静态文件-public" class="headerlink" title="清除缓存文件 (db.json) 和已生成的静态文件 (public)"></a>清除缓存文件 (<code>db.json</code>) 和已生成的静态文件 (<code>public</code>)</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo clean<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo g<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="本地运行静态文件"><a href="#本地运行静态文件" class="headerlink" title="本地运行静态文件"></a>本地运行静态文件</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo s<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="部署到远端"><a href="#部署到远端" class="headerlink" title="部署到远端"></a>部署到远端</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="备份到远端"><a href="#备份到远端" class="headerlink" title="备份到远端"></a>备份到远端</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo b<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="查看命令帮助"><a href="#查看命令帮助" class="headerlink" title="查看命令帮助"></a>查看命令帮助</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo <span class="token builtin class-name">help</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="Windows-常用组合命令"><a href="#Windows-常用组合命令" class="headerlink" title="Windows 常用组合命令"></a>Windows 常用组合命令</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo g <span class="token operator">&amp;&amp;</span> hexo s<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo clean <span class="token operator">&amp;&amp;</span> hexo g <span class="token operator">&amp;&amp;</span> hexo s<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo clean <span class="token operator">&amp;&amp;</span> hexo g <span class="token operator">&amp;&amp;</span> hexo d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo clean <span class="token operator">&amp;&amp;</span> hexo g <span class="token operator">&amp;&amp;</span> hexo d <span class="token operator">&amp;&amp;</span> hexo b<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h6 id="官方使用说明（https-hexo-io-zh-cn-docs-commands）"><a href="#官方使用说明（https-hexo-io-zh-cn-docs-commands）" class="headerlink" title="官方使用说明（https://hexo.io/zh-cn/docs/commands）"></a><strong>官方使用说明</strong>（<a href="https://hexo.io/zh-cn/docs/commands">https://hexo.io/zh-cn/docs/commands</a>）</h6>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Command </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Matery 主题使用说明</title>
      <link href="/BloodSoul.github.io/2021/07/02/block/matery-zhu-ti-shi-yong-shuo-ming/"/>
      <url>/BloodSoul.github.io/2021/07/02/block/matery-zhu-ti-shi-yong-shuo-ming/</url>
      
        <content type="html"><![CDATA[<h1 id="hexo-theme-matery"><a href="#hexo-theme-matery" class="headerlink" title="hexo-theme-matery"></a><a href="https://github.com/blinkfox/hexo-theme-matery/network">hexo-theme-matery</a></h1><p><a href="README.md">🇺🇸English Document</a> | <a href="http://blinkfox.com/">国内访问示例 (http://blinkfox.com)</a> | <a href="https://blinkfox.github.io/">Github 部署演示示例 (https://blinkfox.github.io)</a> | QQ 交流群1（已满）: <a href="https://jq.qq.com/?_wv=1027&amp;k=5zMDYHT"><code>926552981</code></a> | QQ 交流群2（推荐）: <a href="https://jq.qq.com/?_wv=1027&amp;k=53q2Ayp"><code>971887688</code></a></p><blockquote><p>这是一个采用 <code>Material Design</code> 和响应式设计的 Hexo 博客主题。</p></blockquote><h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><ul><li>简单漂亮，文章内容美观易读</li><li><a href="https://material.io/">Material Design</a> 设计</li><li>响应式设计，博客在桌面端、平板、手机等设备上均能很好的展现</li><li>首页轮播文章及每天动态切换 <code>Banner</code> 图片</li><li>瀑布流式的博客文章列表（文章无特色图片时会有 <code>24</code> 张漂亮的图片代替）</li><li>时间轴式的归档页</li><li><strong>词云</strong>的标签页和<strong>雷达图</strong>的分类页</li><li>丰富的关于我页面（包括关于我、文章统计图、我的项目、我的技能、相册等）</li><li>可自定义的数据的友情链接页面</li><li>支持文章置顶和文章打赏</li><li>支持 <code>MathJax</code></li><li><code>TOC</code> 目录</li><li>可设置复制文章内容时追加版权信息</li><li>可设置阅读文章时做密码验证</li><li><a href="https://gitalk.github.io/">Gitalk</a>、<a href="https://imsun.github.io/gitment/">Gitment</a>、<a href="https://valine.js.org/">Valine</a> 和 <a href="https://disqus.com/">Disqus</a> 评论模块（推荐使用 <code>Gitalk</code>）</li><li>集成了<a href="http://busuanzi.ibruce.info/">不蒜子统计</a>、谷歌分析（<code>Google Analytics</code>）和文章字数统计等功能</li><li>支持在首页的音乐播放和视频播放功能</li><li>支持<code>emoji</code>表情，用<code>markdown emoji</code>语法书写直接生成对应的能<strong>跳跃</strong>的表情。</li><li>支持 <a href="http://www.daovoice.io/">DaoVoice</a>、<a href="https://www.tidio.com/">Tidio</a> 在线聊天功能。</li></ul><h2 id="贡献者"><a href="#贡献者" class="headerlink" title="贡献者"></a>贡献者</h2><p>感谢下面列出的贡献者，没有他们，hexo-theme-matery 不会这么完美。</p><ul><li><a href="https://github.com/HarborZeng">@HarborZeng</a></li><li><a href="https://github.com/shw2018">@shw2018</a></li><li><a href="https://github.com/L1cardo">@L1cardo</a></li><li><a href="https://github.com/Five-great">@Five-great</a></li></ul><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>本主题<strong>推荐你使用 Hexo 5.0.0 及以上的版本</strong>。如果，你已经有一个自己的 <a href="https://hexo.io/zh-cn/">Hexo</a> 博客了，建议你将 Hexo 升级到最新稳定的版本。</p><p>点击 <a href="https://codeload.github.com/blinkfox/hexo-theme-matery/zip/master">这里</a> 下载 <code>master</code> 分支的最新稳定版的代码，解压缩后，将 <code>hexo-theme-matery</code> 的文件夹复制到你 Hexo 的 <code>themes</code> 文件夹中即可。</p><p>当然你也可以在你的 <code>themes</code> 文件夹下使用 <code>git clone</code> 命令来下载:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/blinkfox/hexo-theme-matery.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="切换主题"><a href="#切换主题" class="headerlink" title="切换主题"></a>切换主题</h3><p>修改 Hexo 根目录下的 <code>_config.yml</code> 的  <code>theme</code> 的值：<code>theme: hexo-theme-matery</code></p><h4 id="config-yml-文件的其它修改建议"><a href="#config-yml-文件的其它修改建议" class="headerlink" title="_config.yml 文件的其它修改建议:"></a><code>_config.yml</code> 文件的其它修改建议:</h4><ul><li>请修改 <code>_config.yml</code> 的 <code>url</code> 的值为你的网站主 <code>URL</code>（如：<code>http://xxx.github.io</code>）。</li><li>建议修改两个 <code>per_page</code> 的分页条数值为 <code>6</code> 的倍数，如：<code>12</code>、<code>18</code> 等，这样文章列表在各个屏幕下都能较好的显示。</li><li>如果你是中文用户，则建议修改 <code>language</code> 的值为 <code>zh-CN</code>。</li></ul><h3 id="新建分类-categories-页"><a href="#新建分类-categories-页" class="headerlink" title="新建分类 categories 页"></a>新建分类 categories 页</h3><p><code>categories</code> 页是用来展示所有分类的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>categories/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new page <span class="token string">"categories"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/categories/index.md</code>，至少需要以下内容：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> categories<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-30 17:25:30</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"categories"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"categories"</span><span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="新建标签-tags-页"><a href="#新建标签-tags-页" class="headerlink" title="新建标签 tags 页"></a>新建标签 tags 页</h3><p><code>tags</code> 页是用来展示所有标签的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>tags/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new page <span class="token string">"tags"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/tags/index.md</code>，至少需要以下内容：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> tags<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-30 18:23:38</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"tags"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"tags"</span><span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="新建关于我-about-页"><a href="#新建关于我-about-页" class="headerlink" title="新建关于我 about 页"></a>新建关于我 about 页</h3><p><code>about</code> 页是用来展示<strong>关于我和我的博客</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>about/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new page <span class="token string">"about"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/about/index.md</code>，至少需要以下内容：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> about<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-30 17:25:30</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"about"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"about"</span><span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="新建留言板-contact-页（可选的）"><a href="#新建留言板-contact-页（可选的）" class="headerlink" title="新建留言板 contact 页（可选的）"></a>新建留言板 contact 页（可选的）</h3><p><code>contact</code> 页是用来展示<strong>留言板</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>contact/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new page <span class="token string">"contact"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/contact/index.md</code>，至少需要以下内容：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> contact<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-30 17:25:30</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"contact"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"contact"</span><span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><strong>注</strong>：本留言板功能依赖于第三方评论系统，请<strong>激活</strong>你的评论系统才有效果。并且在主题的 <code>_config.yml</code> 文件中，第 <code>19</code> 至 <code>21</code> 行的“<strong>菜单</strong>”配置，取消关于留言板的注释即可。</p></blockquote><h3 id="新建友情链接-friends-页（可选的）"><a href="#新建友情链接-friends-页（可选的）" class="headerlink" title="新建友情链接 friends 页（可选的）"></a>新建友情链接 friends 页（可选的）</h3><p><code>friends</code> 页是用来展示<strong>友情链接</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>friends/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new page <span class="token string">"friends"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/friends/index.md</code>，至少需要以下内容：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> friends<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-12-12 21:25:30</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"friends"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"friends"</span><span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>同时，在你的博客 <code>source</code> 目录下新建 <code>_data</code> 目录，在 <code>_data</code> 目录中新建 <code>friends.json</code> 文件，文件内容如下所示：</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">[</span><span class="token punctuation">{</span>    <span class="token property">"avatar"</span><span class="token operator">:</span> <span class="token string">"http://image.luokangyuan.com/1_qq_27922023.jpg"</span><span class="token punctuation">,</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"码酱"</span><span class="token punctuation">,</span>    <span class="token property">"introduction"</span><span class="token operator">:</span> <span class="token string">"我不是大佬，只是在追寻大佬的脚步"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"http://luokangyuan.com/"</span><span class="token punctuation">,</span>    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"前去学习"</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>    <span class="token property">"avatar"</span><span class="token operator">:</span> <span class="token string">"http://image.luokangyuan.com/4027734.jpeg"</span><span class="token punctuation">,</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"闪烁之狐"</span><span class="token punctuation">,</span>    <span class="token property">"introduction"</span><span class="token operator">:</span> <span class="token string">"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"https://blinkfox.github.io/"</span><span class="token punctuation">,</span>    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"前去学习"</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>    <span class="token property">"avatar"</span><span class="token operator">:</span> <span class="token string">"http://image.luokangyuan.com/avatar.jpg"</span><span class="token punctuation">,</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"ja_rome"</span><span class="token punctuation">,</span>    <span class="token property">"introduction"</span><span class="token operator">:</span> <span class="token string">"平凡的脚步也可以走出伟大的行程"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"https://me.csdn.net/jlh912008548"</span><span class="token punctuation">,</span>    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"前去学习"</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="新建-404-页"><a href="#新建-404-页" class="headerlink" title="新建 404 页"></a>新建 404 页</h3><p>如果在你的博客 <code>source</code> 目录下还没有 <code>404.md</code> 文件，那么你就需要新建一个</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new page <span class="token number">404</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/404/index.md</code>，至少需要以下内容：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token number">404</span><span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-30 17:25:30</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"404"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"404"</span><span class="token key atrule">description</span><span class="token punctuation">:</span> <span class="token string">"Oops～，我崩溃了！找不到你想要的页面 :("</span><span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="菜单导航配置"><a href="#菜单导航配置" class="headerlink" title="菜单导航配置"></a>菜单导航配置</h3><h4 id="配置基本菜单导航的名称、路径url和图标icon"><a href="#配置基本菜单导航的名称、路径url和图标icon" class="headerlink" title="配置基本菜单导航的名称、路径url和图标icon."></a>配置基本菜单导航的名称、路径url和图标icon.</h4><p>1.菜单导航名称可以是中文也可以是英文(如：<code>Index</code>或<code>主页</code>)<br>2.图标icon 可以在<a href="https://fontawesome.com/icons">Font Awesome</a> 中查找   </p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">menu</span><span class="token punctuation">:</span>  <span class="token key atrule">Index</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>home  <span class="token key atrule">Tags</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /tags    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>tags  <span class="token key atrule">Categories</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /categories    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>bookmark  <span class="token key atrule">Archives</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /archives    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>archive  <span class="token key atrule">About</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /about    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>user<span class="token punctuation">-</span>circle  <span class="token key atrule">Friends</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /friends    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>address<span class="token punctuation">-</span>book<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="二级菜单配置方法"><a href="#二级菜单配置方法" class="headerlink" title="二级菜单配置方法"></a>二级菜单配置方法</h4><p>如果你需要二级菜单则可以在原基本菜单导航的基础上如下操作</p><ol><li>在需要添加二级菜单的一级菜单下添加<code>children</code>关键字(如:<code>About</code>菜单下添加<code>children</code>)     </li><li>在<code>children</code>下创建二级菜单的 名称name,路径url和图标icon.      </li><li>注意每个二级菜单模块前要加 <code>-</code>.     </li><li>注意缩进格式  </li></ol><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">menu</span><span class="token punctuation">:</span>  <span class="token key atrule">Index</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>home  <span class="token key atrule">Tags</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /tags    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>tags  <span class="token key atrule">Categories</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /categories    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>bookmark  <span class="token key atrule">Archives</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /archives    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>archive  <span class="token key atrule">About</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /about    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>user<span class="token punctuation">-</span>circle<span class="token punctuation">-</span>o  <span class="token key atrule">Friends</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /friends    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>address<span class="token punctuation">-</span>book  <span class="token key atrule">Medias</span><span class="token punctuation">:</span>    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>list    <span class="token key atrule">children</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Music        <span class="token key atrule">url</span><span class="token punctuation">:</span> /music        <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>music      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Movies        <span class="token key atrule">url</span><span class="token punctuation">:</span> /movies        <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>film      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Books        <span class="token key atrule">url</span><span class="token punctuation">:</span> /books        <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>book      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Galleries        <span class="token key atrule">url</span><span class="token punctuation">:</span> /galleries        <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>image<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行 <code>hexo clean &amp;&amp; hexo g</code> 重新生成博客文件，然后就可以在文章中对应位置看到你用<code>emoji</code>语法写的表情了。</p><h3 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h3><p>从 Hexo5.0 版本开始自带了 <code>prismjs</code> 代码语法高亮的支持，本主题对此进行了改造支持。</p><p>如果你的博客中曾经安装过 <code>hexo-prism-plugin</code> 的插件，那么你须要执行 <code>npm uninstall hexo-prism-plugin</code> 来卸载掉它，否则生成的代码中会有 <code>&amp;#123;</code> 和 <code>&amp;#125;</code> 的转义字符。</p><p>然后，修改 Hexo 根目录下 <code>_config.yml</code> 文件中 <code>highlight.enable</code> 的值为 <code>false</code>，并将 <code>prismjs.enable</code> 的值设置为 <code>true</code>，主要配置如下：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">highlight</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">line_number</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">auto_detect</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">tab_replace</span><span class="token punctuation">:</span> <span class="token string">''</span>  <span class="token key atrule">wrap</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">hljs</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">prismjs</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">preprocess</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">line_number</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">tab_replace</span><span class="token punctuation">:</span> <span class="token string">''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>主题中默认的 <code>prismjs</code> 主题是 <code>Tomorrow Night</code>，如果你想定制自己的主题，可以前往 <a href="https://prismjs.com/download.html">prismjs 下载页面</a> 定制下载自己喜欢的主题 <code>css</code> 文件，然后将此 css 主题文件取名为 <code>prism.css</code>，替换掉 <code>hexo-theme-matery</code> 主题文件夹中的 <code>source/libs/prism/prism.css</code> 文件即可。</p><h3 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h3><p>本主题中还使用到了 <a href="https://github.com/wzpan/hexo-generator-search">hexo-generator-search</a> 的 Hexo 插件来做内容搜索，安装命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-generator-search --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">search</span><span class="token punctuation">:</span>  <span class="token key atrule">path</span><span class="token punctuation">:</span> search.xml  <span class="token key atrule">field</span><span class="token punctuation">:</span> post<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="中文链接转拼音（建议安装）"><a href="#中文链接转拼音（建议安装）" class="headerlink" title="中文链接转拼音（建议安装）"></a>中文链接转拼音（建议安装）</h3><p>如果你的文章名称是中文的，那么 Hexo 默认生成的永久链接也会有中文，这样不利于 <code>SEO</code>，且 <code>gitment</code> 评论对中文链接也不支持。我们可以用 <a href="https://github.com/viko16/hexo-permalink-pinyin">hexo-permalink-pinyin</a> Hexo 插件使在生成文章时生成中文拼音的永久链接。</p><p>安装命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i hexo-permalink-pinyin --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">permalink_pinyin</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">separator</span><span class="token punctuation">:</span> <span class="token string">'-'</span> <span class="token comment"># default: '-'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p><strong>注</strong>：除了此插件外，<a href="https://github.com/rozbo/hexo-abbrlink">hexo-abbrlink</a> 插件也可以生成非中文的链接。</p></blockquote><h3 id="文章字数统计插件（建议安装）"><a href="#文章字数统计插件（建议安装）" class="headerlink" title="文章字数统计插件（建议安装）"></a>文章字数统计插件（建议安装）</h3><p>如果你想要在文章中显示文章字数、阅读时长信息，可以安装 <a href="https://github.com/willin/hexo-wordcount">hexo-wordcount</a>插件。</p><p>安装命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i --save hexo-wordcount<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后只需在本主题下的 <code>_config.yml</code> 文件中，将各个文章字数相关的配置激活即可：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">postInfo</span><span class="token punctuation">:</span>  <span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">update</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">wordCount</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># 设置文章字数统计为 true.</span>  <span class="token key atrule">totalCount</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># 设置站点文章总字数统计为 true.</span>  <span class="token key atrule">min2read</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># 阅读时长.</span>  <span class="token key atrule">readCount</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># 阅读次数.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="添加emoji表情支持（可选的）"><a href="#添加emoji表情支持（可选的）" class="headerlink" title="添加emoji表情支持（可选的）"></a>添加emoji表情支持（可选的）</h3><p>本主题新增了对<code>emoji</code>表情的支持，使用到了 <a href="https://npm.taobao.org/package/hexo-filter-github-emojis">hexo-filter-github-emojis</a> 的 Hexo 插件来支持 <code>emoji</code>表情的生成，把对应的<code>markdown emoji</code>语法（<code>::</code>,例如：<code>:smile:</code>）转变成会跳跃的<code>emoji</code>表情，安装命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-filter-github-emojis --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">githubEmojis</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">className</span><span class="token punctuation">:</span> github<span class="token punctuation">-</span>emoji  <span class="token key atrule">inject</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">styles</span><span class="token punctuation">:</span>  customEmojis<span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="添加-RSS-订阅支持（可选的）"><a href="#添加-RSS-订阅支持（可选的）" class="headerlink" title="添加 RSS 订阅支持（可选的）"></a>添加 RSS 订阅支持（可选的）</h3><p>本主题中还使用到了 <a href="https://github.com/hexojs/hexo-generator-feed">hexo-generator-feed</a> 的 Hexo 插件来做 <code>RSS</code>，安装命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-generator-feed --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">feed</span><span class="token punctuation">:</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> atom  <span class="token key atrule">path</span><span class="token punctuation">:</span> atom.xml  <span class="token key atrule">limit</span><span class="token punctuation">:</span> <span class="token number">20</span>  <span class="token key atrule">hub</span><span class="token punctuation">:</span>  <span class="token key atrule">content</span><span class="token punctuation">:</span>  <span class="token key atrule">content_limit</span><span class="token punctuation">:</span> <span class="token number">140</span>  <span class="token key atrule">content_limit_delim</span><span class="token punctuation">:</span> <span class="token string">' '</span>  <span class="token key atrule">order_by</span><span class="token punctuation">:</span> <span class="token punctuation">-</span>date<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行 <code>hexo clean &amp;&amp; hexo g</code> 重新生成博客文件，然后在 <code>public</code> 文件夹中即可看到 <code>atom.xml</code> 文件，说明你已经安装成功了。</p><h3 id="添加-DaoVoice-在线聊天功能（可选的）"><a href="#添加-DaoVoice-在线聊天功能（可选的）" class="headerlink" title="添加 DaoVoice 在线聊天功能（可选的）"></a>添加 <a href="http://www.daovoice.io/">DaoVoice</a> 在线聊天功能（可选的）</h3><p>前往 <a href="http://www.daovoice.io/">DaoVoice</a> 官网注册并且获取 <code>app_id</code>，并将 <code>app_id</code> 填入主题的 <code>_config.yml</code> 文件中。</p><h3 id="添加-Tidio-在线聊天功能（可选的）"><a href="#添加-Tidio-在线聊天功能（可选的）" class="headerlink" title="添加 Tidio 在线聊天功能（可选的）"></a>添加 <a href="https://www.tidio.com/">Tidio</a> 在线聊天功能（可选的）</h3><p>前往 <a href="https://www.tidio.com/">Tidio</a> 官网注册并且获取 <code>Public Key</code>，并将 <code>Public Key</code> 填入主题的 <code>_config.yml</code> 文件中。</p><h3 id="修改页脚"><a href="#修改页脚" class="headerlink" title="修改页脚"></a>修改页脚</h3><p>页脚信息可能需要做定制化修改，而且它不便于做成配置信息，所以可能需要你自己去再修改和加工。修改的地方在主题文件的 <code>/layout/_partial/footer.ejs</code> 文件中，包括站点、使用的主题、访问量等。</p><h3 id="修改社交链接"><a href="#修改社交链接" class="headerlink" title="修改社交链接"></a>修改社交链接</h3><p>在主题的 <code>_config.yml</code> 文件中，默认支持 <code>QQ</code>、<code>GitHub</code> 和邮箱等的配置，你可以在主题文件的 <code>/layout/_partial/social-link.ejs</code> 文件中，新增、修改你需要的社交链接地址，增加链接可参考如下代码：</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">&lt;% if (theme.socialLink.github) { %&gt;    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&lt;%= theme.socialLink.github %&gt;<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tooltipped<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span> <span class="token attr-name">data-tooltip</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>访问我的GitHub<span class="token punctuation">"</span></span> <span class="token attr-name">data-position</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top<span class="token punctuation">"</span></span> <span class="token attr-name">data-delay</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fab fa-github<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>&lt;% } %&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其中，社交图标（如：<code>fa-github</code>）你可以在 <a href="https://fontawesome.com/icons">Font Awesome</a> 中搜索找到。以下是常用社交图标的标识，供你参考：</p><ul><li>Facebook: <code>fab fa-facebook</code></li><li>Twitter: <code>fab fa-twitter</code></li><li>Google-plus: <code>fab fa-google-plus</code></li><li>Linkedin: <code>fab fa-linkedin</code></li><li>Tumblr: <code>fab fa-tumblr</code></li><li>Medium: <code>fab fa-medium</code></li><li>Slack: <code>fab fa-slack</code></li><li>Sina Weibo: <code>fab fa-weibo</code></li><li>Wechat: <code>fab fa-weixin</code></li><li>QQ: <code>fab fa-qq</code></li><li>Zhihu: <code>fab fa-zhihu</code></li></ul><blockquote><p><strong>注意</strong>: 本主题中使用的 <code>Font Awesome</code> 版本为 <code>5.11.0</code>。</p></blockquote><h3 id="修改打赏的二维码图片"><a href="#修改打赏的二维码图片" class="headerlink" title="修改打赏的二维码图片"></a>修改打赏的二维码图片</h3><p>在主题文件的 <code>source/medias/reward</code> 文件中，你可以替换成你的的微信和支付宝的打赏二维码图片。</p><h3 id="配置音乐播放器（可选的）"><a href="#配置音乐播放器（可选的）" class="headerlink" title="配置音乐播放器（可选的）"></a>配置音乐播放器（可选的）</h3><p>要支持音乐播放，在主题的 <code>_config.yml</code> 配置文件中激活music配置即可：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># 是否在首页显示音乐</span><span class="token key atrule">music</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">title</span><span class="token punctuation">:</span>             <span class="token comment"># 非吸底模式有效</span>    <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">show</span><span class="token punctuation">:</span> 听听音乐  <span class="token key atrule">server</span><span class="token punctuation">:</span> netease   <span class="token comment"># require music platform: netease, tencent, kugou, xiami, baidu</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> playlist    <span class="token comment"># require song, playlist, album, search, artist</span>  <span class="token key atrule">id</span><span class="token punctuation">:</span> <span class="token number">503838841</span>     <span class="token comment"># require song id / playlist id / album id / search keyword</span>  <span class="token key atrule">fixed</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>      <span class="token comment"># 开启吸底模式</span>  <span class="token key atrule">autoplay</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>   <span class="token comment"># 是否自动播放</span>  <span class="token key atrule">theme</span><span class="token punctuation">:</span> <span class="token string">'#42b983'</span>  <span class="token key atrule">loop</span><span class="token punctuation">:</span> <span class="token string">'all'</span>       <span class="token comment"># 音频循环播放, 可选值: 'all', 'one', 'none'</span>  <span class="token key atrule">order</span><span class="token punctuation">:</span> <span class="token string">'random'</span>   <span class="token comment"># 音频循环顺序, 可选值: 'list', 'random'</span>  <span class="token key atrule">preload</span><span class="token punctuation">:</span> <span class="token string">'auto'</span>   <span class="token comment"># 预加载，可选值: 'none', 'metadata', 'auto'</span>  <span class="token key atrule">volume</span><span class="token punctuation">:</span> <span class="token number">0.7</span>       <span class="token comment"># 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效</span>  <span class="token key atrule">listFolded</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token comment"># 列表默认折叠</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><code>server</code>可选<code>netease</code>（网易云音乐），<code>tencent</code>（QQ音乐），<code>kugou</code>（酷狗音乐），<code>xiami</code>（虾米音乐），</p><p><code>baidu</code>（百度音乐）。</p><p><code>type</code>可选<code>song</code>（歌曲），<code>playlist</code>（歌单），<code>album</code>（专辑），<code>search</code>（搜索关键字），<code>artist</code>（歌手）</p><p><code>id</code>获取方法示例: 浏览器打开网易云音乐，点击我喜欢的音乐歌单，浏览器地址栏后面会有一串数字，<code>playlist</code>的<code>id</code></p><p>即为这串数字。</p></blockquote><h2 id="文章-Front-matter-介绍"><a href="#文章-Front-matter-介绍" class="headerlink" title="文章 Front-matter 介绍"></a>文章 Front-matter 介绍</h2><h3 id="Front-matter-选项详解"><a href="#Front-matter-选项详解" class="headerlink" title="Front-matter 选项详解"></a>Front-matter 选项详解</h3><p><code>Front-matter</code> 选项中的所有内容均为<strong>非必填</strong>的。但我仍然建议至少填写 <code>title</code> 和 <code>date</code> 的值。</p><table><thead><tr><th>配置选项</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>title</td><td><code>Markdown</code> 的文件标题</td><td>文章标题，强烈建议填写此选项</td></tr><tr><td>date</td><td>文件创建时的日期时间</td><td>发布时间，强烈建议填写此选项，且最好保证全局唯一</td></tr><tr><td>author</td><td>根 <code>_config.yml</code> 中的 <code>author</code></td><td>文章作者</td></tr><tr><td>img</td><td><code>featureImages</code> 中的某个值</td><td>文章特征图，推荐使用图床(腾讯云、七牛云、又拍云等)来做图片的路径.如: <code>http://xxx.com/xxx.jpg</code></td></tr><tr><td>top</td><td><code>true</code></td><td>推荐文章（文章是否置顶），如果 <code>top</code> 值为 <code>true</code>，则会作为首页推荐文章</td></tr><tr><td>cover</td><td><code>false</code></td><td><code>v1.0.2</code>版本新增，表示该文章是否需要加入到首页轮播封面中</td></tr><tr><td>coverImg</td><td>无</td><td><code>v1.0.2</code>版本新增，表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片</td></tr><tr><td>password</td><td>无</td><td>文章阅读密码，如果要对文章设置阅读验证密码的话，就可以设置 <code>password</code> 的值，该值必须是用 <code>SHA256</code> 加密后的密码，防止被他人识破。前提是在主题的 <code>config.yml</code> 中激活了 <code>verifyPassword</code> 选项</td></tr><tr><td>toc</td><td><code>true</code></td><td>是否开启 TOC，可以针对某篇文章单独关闭 TOC 的功能。前提是在主题的 <code>config.yml</code> 中激活了 <code>toc</code> 选项</td></tr><tr><td>mathjax</td><td><code>false</code></td><td>是否开启数学公式支持 ，本文章是否开启 <code>mathjax</code>，且需要在主题的 <code>_config.yml</code> 文件中也需要开启才行</td></tr><tr><td>summary</td><td>无</td><td>文章摘要，自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</td></tr><tr><td>categories</td><td>无</td><td>文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类</td></tr><tr><td>tags</td><td>无</td><td>文章标签，一篇文章可以多个标签</td></tr><tr><td>keywords</td><td>文章标题</td><td>文章关键字，SEO 时需要</td></tr><tr><td>reprintPolicy</td><td>cc_by</td><td>文章转载规则， 可以是 cc_by, cc_by_nd, cc_by_sa, cc_by_nc, cc_by_nc_nd, cc_by_nc_sa, cc0, noreprint 或 pay 中的一个</td></tr></tbody></table><blockquote><p><strong>注意</strong>:</p><ol><li>如果 <code>img</code> 属性不填写的话，文章特色图会根据文章标题的 <code>hashcode</code> 的值取余，然后选取主题中对应的特色图片，从而达到让所有文章的特色图<strong>各有特色</strong>。</li><li><code>date</code> 的值尽量保证每篇文章是唯一的，因为本主题中 <code>Gitalk</code> 和 <code>Gitment</code> 识别 <code>id</code> 是通过 <code>date</code> 的值来作为唯一标识的。</li><li>如果要对文章设置阅读验证密码的功能，不仅要在 Front-matter 中设置采用了 SHA256 加密的 password 的值，还需要在主题的 <code>_config.yml</code> 中激活了配置。有些在线的 SHA256 加密的地址，可供你使用：<a href="http://tool.oschina.net/encrypt?type=2">开源中国在线工具</a>、<a href="http://encode.chahuo.com/">chahuo</a>、<a href="http://tool.chinaz.com/tools/hash.aspx">站长工具</a>。</li><li>您可以在文章md文件的 front-matter 中指定 reprintPolicy 来给单个文章配置转载规则</li></ol></blockquote><p>以下为文章的 <code>Front-matter</code> 示例。</p><h3 id="最简示例"><a href="#最简示例" class="headerlink" title="最简示例"></a>最简示例</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> typora<span class="token punctuation">-</span>vue<span class="token punctuation">-</span>theme主题介绍<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-07 09:25:00</span><span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="最全示例"><a href="#最全示例" class="headerlink" title="最全示例"></a>最全示例</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> typora<span class="token punctuation">-</span>vue<span class="token punctuation">-</span>theme主题介绍<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-07 09:25:00</span><span class="token key atrule">author</span><span class="token punctuation">:</span> 赵奇<span class="token key atrule">img</span><span class="token punctuation">:</span> /source/images/xxx.jpg<span class="token key atrule">top</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">cover</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">coverImg</span><span class="token punctuation">:</span> /images/1.jpg<span class="token key atrule">password</span><span class="token punctuation">:</span> 8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92<span class="token key atrule">toc</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">mathjax</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">summary</span><span class="token punctuation">:</span> 这是你自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要<span class="token key atrule">categories</span><span class="token punctuation">:</span> Markdown<span class="token key atrule">tags</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> Typora  <span class="token punctuation">-</span> Markdown<span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="效果截图"><a href="#效果截图" class="headerlink" title="效果截图"></a>效果截图</h2><p><img src="http://static.blinkfox.com/matery-20181202-1.png" alt="首页"></p><p><img src="http://static.blinkfox.com/matery-20181202-2.png" alt="首页推荐文章"></p><p><img src="http://static.blinkfox.com/matery-20181202-3.png" alt="首页文章列表"></p><p><img src="http://static.blinkfox.com/matery-20181202-7.png" alt="首页文章列表"></p><p><img src="http://static.blinkfox.com/matery-20181202-8.png" alt="首页文章列表"></p><h2 id="自定制修改"><a href="#自定制修改" class="headerlink" title="自定制修改"></a>自定制修改</h2><p>在本主题的 <code>_config.yml</code> 中可以修改部分自定义信息，有以下几个部分：</p><ul><li>菜单</li><li>我的梦想</li><li>首页的音乐播放器和视频播放器配置</li><li>是否显示推荐文章名称和按钮配置</li><li><code>favicon</code> 和 <code>Logo</code></li><li>个人信息</li><li>TOC 目录</li><li>文章打赏信息</li><li>复制文章内容时追加版权信息</li><li>MathJax</li><li>文章字数统计、阅读时长</li><li>点击页面的’爱心’效果</li><li>我的项目</li><li>我的技能</li><li>我的相册</li><li><code>Gitalk</code>、<code>Gitment</code>、<code>Valine</code> 和 <code>disqus</code> 评论配置</li><li><a href="http://busuanzi.ibruce.info/">不蒜子统计</a>和谷歌分析（<code>Google Analytics</code>）</li><li>默认特色图的集合。当文章没有设置特色图时，本主题会根据文章标题的 <code>hashcode</code> 值取余，来选择展示对应的特色图</li></ul><p><strong>我认为个人博客应该都有自己的风格和特色</strong>。如果本主题中的诸多功能和主题色彩你不满意，可以在主题中自定义修改，很多更自由的功能和细节点的修改难以在主题的 <code>_config.yml</code> 中完成，需要修改源代码才来完成。以下列出了可能对你有用的地方：</p><h3 id="修改主题颜色"><a href="#修改主题颜色" class="headerlink" title="修改主题颜色"></a>修改主题颜色</h3><p>在主题文件的 <code>/source/css/matery.css</code> 文件中，搜索 <code>.bg-color</code> 来修改背景颜色：</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/* 整体背景颜色，包括导航、移动端的导航、页尾、标签页等的背景颜色. */</span><span class="token selector">.bg-color</span> <span class="token punctuation">{</span>    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to right<span class="token punctuation">,</span> #4cbf30 0%<span class="token punctuation">,</span> #0f9d58 100%<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token atrule"><span class="token rule">@-webkit-keyframes</span> rainbow</span> <span class="token punctuation">{</span>   <span class="token comment">/* 动态切换背景颜色. */</span><span class="token punctuation">}</span><span class="token atrule"><span class="token rule">@keyframes</span> rainbow</span> <span class="token punctuation">{</span>    <span class="token comment">/* 动态切换背景颜色. */</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="修改-banner-图和文章特色图"><a href="#修改-banner-图和文章特色图" class="headerlink" title="修改 banner 图和文章特色图"></a>修改 banner 图和文章特色图</h3><p>你可以直接在 <code>/source/medias/banner</code> 文件夹中更换你喜欢的 <code>banner</code> 图片，主题代码中是每天动态切换一张，只需 <code>7</code> 张即可。如果你会 <code>JavaScript</code> 代码，可以修改成你自己喜欢切换逻辑，如：随机切换等，<code>banner</code> 切换的代码位置在 <code>/layout/_partial/bg-cover-content.ejs</code> 文件的 <code>&lt;script&gt;&lt;/script&gt;</code> 代码中：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.bg-cover'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'background-image'</span><span class="token punctuation">,</span> <span class="token string">'url(/medias/banner/'</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDay</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'.jpg)'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在 <code>/source/medias/featureimages</code> 文件夹中默认有 24 张特色图片，你可以再增加或者减少，并需要在 <code>_config.yml</code> 做同步修改。</p><h2 id="版本变更记录"><a href="#版本变更记录" class="headerlink" title="版本变更记录"></a>版本变更记录</h2><p>参见 <a href="https://github.com/blinkfox/hexo-theme-matery/blob/master/README.md">CHANGELOG.md</a></p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Command </tag>
            
            <tag> Theme </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
